syntax = "proto3";

// do not change the package name
package pando.api.survey.v1;

import "google/api/annotations.proto";
import "google/protobuf/timestamp.proto";
import "pando/api/extensions.proto";
import "pando/api/shared.proto";
import "pando/api/survey/v1/shared.proto";

// these must be the same in all 'pando.survey.v1' proto files
option csharp_namespace = "Pando.Api.Survey.V1";
option java_multiple_files = true;
option java_package = "com.pando.api.survey.v1";
option ruby_package = "Pando::Api::Survey::V1";

/* SurveyReportService contains Administrative APIs for Survey reporting */

service SurveyReportService {
    option (pando.api.service).required_scope = "survey:reports";

    rpc GetIncompleteSurveyInstances(GetInstancesReportRequest) returns (InstanceList) {
        option (pando.api.method).required_claim = "survey:reports,instances";
        option (google.api.http) = {
            get: "/api/v1/survey/reports/instance/list/incomplete"
        };
    }

    rpc GetCompletedSurveyInstances(GetInstancesReportRequest) returns (InstanceList) {
        option (pando.api.method).required_claim = "survey:reports,instances";
        option (google.api.http) = {
            get: "/api/v1/survey/reports/instance/list/completed"
        };
    }

    rpc GetRecentlyCompletedSurveyInstances(GetInstancesReportRequest) returns (InstanceList) {
        option (pando.api.method).required_claim = "survey:reports,instances";
        option (google.api.http) = {
            get: "/api/v1/survey/reports/instance/list/recently-completed"
        };
    }

    rpc GetSurveyInstanceStatuses(GetSurveyInstanceStatusesRequest) returns (SurveyInstancesStatusList){
        option (pando.api.method).required_claim = "survey:reports,get_survey_instance_statuses";
        option (google.api.http) = {
            get: "/api/v1/survey/reports/instance/list/statuses"
        };
    }
}

message GetInstancesReportRequest {
    oneof target {
        string user_id = 1;
        string organization_code = 2;
    }
    google.protobuf.Timestamp start = 3;
    google.protobuf.Timestamp end = 4;
    int32 page = 100;
    int32 results_per_page = 101;
}

message GetSurveyInstanceStatusesRequest {
    string organization_code = 1;
    bool is_chart_data_included = 2;
    bool is_completed_only = 3;
    int32 page = 100;
    int32 results_per_page = 101;
}

message SurveyInstancesStatusList {
    repeated SurveyInstanceStatus survey_instance_status = 1;
    repeated ChartData chart_data = 2;
    PaginationResult pagination = 100;
}

message SurveyInstanceStatus {
    string guid = 1;
    string organization_name = 2;
    google.protobuf.Timestamp date_created = 3;
    string contact_info = 4;
    string respondent_name = 5;
    google.protobuf.Timestamp date_complete = 6;
    string name = 7;
}

message ChartData {
    string survey_name = 1;
    int32 complete_count = 2;
    int32 incomplete_count = 3;
}