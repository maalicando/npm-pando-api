// source: pando/api/contact/v1/events.proto
/**
 * @fileoverview
 * @enhanceable
 * @suppress {missingRequire} reports error on implicit type usages.
 * @suppress {messageConventions} JS Compiler reports an error if a variable or
 *     field starts with 'MSG_' and isn't a translatable message.
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!
/* eslint-disable */
// @ts-nocheck

var jspb = require('google-protobuf');
var goog = jspb;
var global = Function('return this')();

var pando_api_shared_pb = require('../../../../pando/api/shared_pb.js');
goog.object.extend(proto, pando_api_shared_pb);
goog.exportSymbol('proto.pando.api.contact.v1.AccountAccessed', null, global);
goog.exportSymbol('proto.pando.api.contact.v1.AddressAccessed', null, global);
goog.exportSymbol('proto.pando.api.contact.v1.AddressVerified', null, global);
goog.exportSymbol('proto.pando.api.contact.v1.AddressesAccessed', null, global);
goog.exportSymbol('proto.pando.api.contact.v1.ContactAccessed', null, global);
goog.exportSymbol('proto.pando.api.contact.v1.ContactQualified', null, global);
goog.exportSymbol('proto.pando.api.contact.v1.ContactsAccessed', null, global);
goog.exportSymbol('proto.pando.api.contact.v1.Events', null, global);
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.pando.api.contact.v1.AccountAccessed = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, 500, null, null);
};
goog.inherits(proto.pando.api.contact.v1.AccountAccessed, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.pando.api.contact.v1.AccountAccessed.displayName = 'proto.pando.api.contact.v1.AccountAccessed';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.pando.api.contact.v1.AddressAccessed = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, 500, null, null);
};
goog.inherits(proto.pando.api.contact.v1.AddressAccessed, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.pando.api.contact.v1.AddressAccessed.displayName = 'proto.pando.api.contact.v1.AddressAccessed';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.pando.api.contact.v1.ContactAccessed = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, 500, null, null);
};
goog.inherits(proto.pando.api.contact.v1.ContactAccessed, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.pando.api.contact.v1.ContactAccessed.displayName = 'proto.pando.api.contact.v1.ContactAccessed';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.pando.api.contact.v1.AddressesAccessed = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, 500, null, null);
};
goog.inherits(proto.pando.api.contact.v1.AddressesAccessed, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.pando.api.contact.v1.AddressesAccessed.displayName = 'proto.pando.api.contact.v1.AddressesAccessed';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.pando.api.contact.v1.ContactsAccessed = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, 500, null, null);
};
goog.inherits(proto.pando.api.contact.v1.ContactsAccessed, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.pando.api.contact.v1.ContactsAccessed.displayName = 'proto.pando.api.contact.v1.ContactsAccessed';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.pando.api.contact.v1.AddressVerified = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, 500, null, null);
};
goog.inherits(proto.pando.api.contact.v1.AddressVerified, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.pando.api.contact.v1.AddressVerified.displayName = 'proto.pando.api.contact.v1.AddressVerified';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.pando.api.contact.v1.ContactQualified = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, 500, null, null);
};
goog.inherits(proto.pando.api.contact.v1.ContactQualified, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.pando.api.contact.v1.ContactQualified.displayName = 'proto.pando.api.contact.v1.ContactQualified';
}



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.pando.api.contact.v1.AccountAccessed.prototype.toObject = function(opt_includeInstance) {
  return proto.pando.api.contact.v1.AccountAccessed.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.pando.api.contact.v1.AccountAccessed} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.pando.api.contact.v1.AccountAccessed.toObject = function(includeInstance, msg) {
  var f, obj = {
    accountGuid: jspb.Message.getFieldWithDefault(msg, 1, ""),
    userData: (f = msg.getUserData()) && pando_api_shared_pb.UserMetadata.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.pando.api.contact.v1.AccountAccessed}
 */
proto.pando.api.contact.v1.AccountAccessed.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.pando.api.contact.v1.AccountAccessed;
  return proto.pando.api.contact.v1.AccountAccessed.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.pando.api.contact.v1.AccountAccessed} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.pando.api.contact.v1.AccountAccessed}
 */
proto.pando.api.contact.v1.AccountAccessed.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setAccountGuid(value);
      break;
    case 1000:
      var value = new pando_api_shared_pb.UserMetadata;
      reader.readMessage(value,pando_api_shared_pb.UserMetadata.deserializeBinaryFromReader);
      msg.setUserData(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.pando.api.contact.v1.AccountAccessed.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.pando.api.contact.v1.AccountAccessed.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.pando.api.contact.v1.AccountAccessed} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.pando.api.contact.v1.AccountAccessed.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getAccountGuid();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getUserData();
  if (f != null) {
    writer.writeMessage(
      1000,
      f,
      pando_api_shared_pb.UserMetadata.serializeBinaryToWriter
    );
  }
};


/**
 * optional string account_guid = 1;
 * @return {string}
 */
proto.pando.api.contact.v1.AccountAccessed.prototype.getAccountGuid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.pando.api.contact.v1.AccountAccessed} returns this
 */
proto.pando.api.contact.v1.AccountAccessed.prototype.setAccountGuid = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional pando.api.UserMetadata user_data = 1000;
 * @return {?proto.pando.api.UserMetadata}
 */
proto.pando.api.contact.v1.AccountAccessed.prototype.getUserData = function() {
  return /** @type{?proto.pando.api.UserMetadata} */ (
    jspb.Message.getWrapperField(this, pando_api_shared_pb.UserMetadata, 1000));
};


/**
 * @param {?proto.pando.api.UserMetadata|undefined} value
 * @return {!proto.pando.api.contact.v1.AccountAccessed} returns this
*/
proto.pando.api.contact.v1.AccountAccessed.prototype.setUserData = function(value) {
  return jspb.Message.setWrapperField(this, 1000, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.pando.api.contact.v1.AccountAccessed} returns this
 */
proto.pando.api.contact.v1.AccountAccessed.prototype.clearUserData = function() {
  return this.setUserData(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.pando.api.contact.v1.AccountAccessed.prototype.hasUserData = function() {
  return jspb.Message.getField(this, 1000) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.pando.api.contact.v1.AddressAccessed.prototype.toObject = function(opt_includeInstance) {
  return proto.pando.api.contact.v1.AddressAccessed.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.pando.api.contact.v1.AddressAccessed} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.pando.api.contact.v1.AddressAccessed.toObject = function(includeInstance, msg) {
  var f, obj = {
    addressGuid: jspb.Message.getFieldWithDefault(msg, 1, ""),
    userData: (f = msg.getUserData()) && pando_api_shared_pb.UserMetadata.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.pando.api.contact.v1.AddressAccessed}
 */
proto.pando.api.contact.v1.AddressAccessed.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.pando.api.contact.v1.AddressAccessed;
  return proto.pando.api.contact.v1.AddressAccessed.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.pando.api.contact.v1.AddressAccessed} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.pando.api.contact.v1.AddressAccessed}
 */
proto.pando.api.contact.v1.AddressAccessed.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setAddressGuid(value);
      break;
    case 1000:
      var value = new pando_api_shared_pb.UserMetadata;
      reader.readMessage(value,pando_api_shared_pb.UserMetadata.deserializeBinaryFromReader);
      msg.setUserData(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.pando.api.contact.v1.AddressAccessed.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.pando.api.contact.v1.AddressAccessed.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.pando.api.contact.v1.AddressAccessed} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.pando.api.contact.v1.AddressAccessed.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getAddressGuid();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getUserData();
  if (f != null) {
    writer.writeMessage(
      1000,
      f,
      pando_api_shared_pb.UserMetadata.serializeBinaryToWriter
    );
  }
};


/**
 * optional string address_guid = 1;
 * @return {string}
 */
proto.pando.api.contact.v1.AddressAccessed.prototype.getAddressGuid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.pando.api.contact.v1.AddressAccessed} returns this
 */
proto.pando.api.contact.v1.AddressAccessed.prototype.setAddressGuid = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional pando.api.UserMetadata user_data = 1000;
 * @return {?proto.pando.api.UserMetadata}
 */
proto.pando.api.contact.v1.AddressAccessed.prototype.getUserData = function() {
  return /** @type{?proto.pando.api.UserMetadata} */ (
    jspb.Message.getWrapperField(this, pando_api_shared_pb.UserMetadata, 1000));
};


/**
 * @param {?proto.pando.api.UserMetadata|undefined} value
 * @return {!proto.pando.api.contact.v1.AddressAccessed} returns this
*/
proto.pando.api.contact.v1.AddressAccessed.prototype.setUserData = function(value) {
  return jspb.Message.setWrapperField(this, 1000, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.pando.api.contact.v1.AddressAccessed} returns this
 */
proto.pando.api.contact.v1.AddressAccessed.prototype.clearUserData = function() {
  return this.setUserData(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.pando.api.contact.v1.AddressAccessed.prototype.hasUserData = function() {
  return jspb.Message.getField(this, 1000) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.pando.api.contact.v1.ContactAccessed.prototype.toObject = function(opt_includeInstance) {
  return proto.pando.api.contact.v1.ContactAccessed.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.pando.api.contact.v1.ContactAccessed} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.pando.api.contact.v1.ContactAccessed.toObject = function(includeInstance, msg) {
  var f, obj = {
    contactGuid: jspb.Message.getFieldWithDefault(msg, 1, ""),
    userData: (f = msg.getUserData()) && pando_api_shared_pb.UserMetadata.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.pando.api.contact.v1.ContactAccessed}
 */
proto.pando.api.contact.v1.ContactAccessed.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.pando.api.contact.v1.ContactAccessed;
  return proto.pando.api.contact.v1.ContactAccessed.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.pando.api.contact.v1.ContactAccessed} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.pando.api.contact.v1.ContactAccessed}
 */
proto.pando.api.contact.v1.ContactAccessed.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setContactGuid(value);
      break;
    case 1000:
      var value = new pando_api_shared_pb.UserMetadata;
      reader.readMessage(value,pando_api_shared_pb.UserMetadata.deserializeBinaryFromReader);
      msg.setUserData(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.pando.api.contact.v1.ContactAccessed.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.pando.api.contact.v1.ContactAccessed.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.pando.api.contact.v1.ContactAccessed} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.pando.api.contact.v1.ContactAccessed.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getContactGuid();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getUserData();
  if (f != null) {
    writer.writeMessage(
      1000,
      f,
      pando_api_shared_pb.UserMetadata.serializeBinaryToWriter
    );
  }
};


/**
 * optional string contact_guid = 1;
 * @return {string}
 */
proto.pando.api.contact.v1.ContactAccessed.prototype.getContactGuid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.pando.api.contact.v1.ContactAccessed} returns this
 */
proto.pando.api.contact.v1.ContactAccessed.prototype.setContactGuid = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional pando.api.UserMetadata user_data = 1000;
 * @return {?proto.pando.api.UserMetadata}
 */
proto.pando.api.contact.v1.ContactAccessed.prototype.getUserData = function() {
  return /** @type{?proto.pando.api.UserMetadata} */ (
    jspb.Message.getWrapperField(this, pando_api_shared_pb.UserMetadata, 1000));
};


/**
 * @param {?proto.pando.api.UserMetadata|undefined} value
 * @return {!proto.pando.api.contact.v1.ContactAccessed} returns this
*/
proto.pando.api.contact.v1.ContactAccessed.prototype.setUserData = function(value) {
  return jspb.Message.setWrapperField(this, 1000, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.pando.api.contact.v1.ContactAccessed} returns this
 */
proto.pando.api.contact.v1.ContactAccessed.prototype.clearUserData = function() {
  return this.setUserData(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.pando.api.contact.v1.ContactAccessed.prototype.hasUserData = function() {
  return jspb.Message.getField(this, 1000) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.pando.api.contact.v1.AddressesAccessed.prototype.toObject = function(opt_includeInstance) {
  return proto.pando.api.contact.v1.AddressesAccessed.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.pando.api.contact.v1.AddressesAccessed} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.pando.api.contact.v1.AddressesAccessed.toObject = function(includeInstance, msg) {
  var f, obj = {
    accountGuid: jspb.Message.getFieldWithDefault(msg, 1, ""),
    userData: (f = msg.getUserData()) && pando_api_shared_pb.UserMetadata.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.pando.api.contact.v1.AddressesAccessed}
 */
proto.pando.api.contact.v1.AddressesAccessed.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.pando.api.contact.v1.AddressesAccessed;
  return proto.pando.api.contact.v1.AddressesAccessed.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.pando.api.contact.v1.AddressesAccessed} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.pando.api.contact.v1.AddressesAccessed}
 */
proto.pando.api.contact.v1.AddressesAccessed.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setAccountGuid(value);
      break;
    case 1000:
      var value = new pando_api_shared_pb.UserMetadata;
      reader.readMessage(value,pando_api_shared_pb.UserMetadata.deserializeBinaryFromReader);
      msg.setUserData(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.pando.api.contact.v1.AddressesAccessed.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.pando.api.contact.v1.AddressesAccessed.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.pando.api.contact.v1.AddressesAccessed} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.pando.api.contact.v1.AddressesAccessed.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getAccountGuid();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getUserData();
  if (f != null) {
    writer.writeMessage(
      1000,
      f,
      pando_api_shared_pb.UserMetadata.serializeBinaryToWriter
    );
  }
};


/**
 * optional string account_guid = 1;
 * @return {string}
 */
proto.pando.api.contact.v1.AddressesAccessed.prototype.getAccountGuid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.pando.api.contact.v1.AddressesAccessed} returns this
 */
proto.pando.api.contact.v1.AddressesAccessed.prototype.setAccountGuid = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional pando.api.UserMetadata user_data = 1000;
 * @return {?proto.pando.api.UserMetadata}
 */
proto.pando.api.contact.v1.AddressesAccessed.prototype.getUserData = function() {
  return /** @type{?proto.pando.api.UserMetadata} */ (
    jspb.Message.getWrapperField(this, pando_api_shared_pb.UserMetadata, 1000));
};


/**
 * @param {?proto.pando.api.UserMetadata|undefined} value
 * @return {!proto.pando.api.contact.v1.AddressesAccessed} returns this
*/
proto.pando.api.contact.v1.AddressesAccessed.prototype.setUserData = function(value) {
  return jspb.Message.setWrapperField(this, 1000, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.pando.api.contact.v1.AddressesAccessed} returns this
 */
proto.pando.api.contact.v1.AddressesAccessed.prototype.clearUserData = function() {
  return this.setUserData(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.pando.api.contact.v1.AddressesAccessed.prototype.hasUserData = function() {
  return jspb.Message.getField(this, 1000) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.pando.api.contact.v1.ContactsAccessed.prototype.toObject = function(opt_includeInstance) {
  return proto.pando.api.contact.v1.ContactsAccessed.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.pando.api.contact.v1.ContactsAccessed} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.pando.api.contact.v1.ContactsAccessed.toObject = function(includeInstance, msg) {
  var f, obj = {
    accountGuid: jspb.Message.getFieldWithDefault(msg, 1, ""),
    userData: (f = msg.getUserData()) && pando_api_shared_pb.UserMetadata.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.pando.api.contact.v1.ContactsAccessed}
 */
proto.pando.api.contact.v1.ContactsAccessed.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.pando.api.contact.v1.ContactsAccessed;
  return proto.pando.api.contact.v1.ContactsAccessed.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.pando.api.contact.v1.ContactsAccessed} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.pando.api.contact.v1.ContactsAccessed}
 */
proto.pando.api.contact.v1.ContactsAccessed.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setAccountGuid(value);
      break;
    case 1000:
      var value = new pando_api_shared_pb.UserMetadata;
      reader.readMessage(value,pando_api_shared_pb.UserMetadata.deserializeBinaryFromReader);
      msg.setUserData(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.pando.api.contact.v1.ContactsAccessed.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.pando.api.contact.v1.ContactsAccessed.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.pando.api.contact.v1.ContactsAccessed} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.pando.api.contact.v1.ContactsAccessed.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getAccountGuid();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getUserData();
  if (f != null) {
    writer.writeMessage(
      1000,
      f,
      pando_api_shared_pb.UserMetadata.serializeBinaryToWriter
    );
  }
};


/**
 * optional string account_guid = 1;
 * @return {string}
 */
proto.pando.api.contact.v1.ContactsAccessed.prototype.getAccountGuid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.pando.api.contact.v1.ContactsAccessed} returns this
 */
proto.pando.api.contact.v1.ContactsAccessed.prototype.setAccountGuid = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional pando.api.UserMetadata user_data = 1000;
 * @return {?proto.pando.api.UserMetadata}
 */
proto.pando.api.contact.v1.ContactsAccessed.prototype.getUserData = function() {
  return /** @type{?proto.pando.api.UserMetadata} */ (
    jspb.Message.getWrapperField(this, pando_api_shared_pb.UserMetadata, 1000));
};


/**
 * @param {?proto.pando.api.UserMetadata|undefined} value
 * @return {!proto.pando.api.contact.v1.ContactsAccessed} returns this
*/
proto.pando.api.contact.v1.ContactsAccessed.prototype.setUserData = function(value) {
  return jspb.Message.setWrapperField(this, 1000, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.pando.api.contact.v1.ContactsAccessed} returns this
 */
proto.pando.api.contact.v1.ContactsAccessed.prototype.clearUserData = function() {
  return this.setUserData(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.pando.api.contact.v1.ContactsAccessed.prototype.hasUserData = function() {
  return jspb.Message.getField(this, 1000) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.pando.api.contact.v1.AddressVerified.prototype.toObject = function(opt_includeInstance) {
  return proto.pando.api.contact.v1.AddressVerified.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.pando.api.contact.v1.AddressVerified} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.pando.api.contact.v1.AddressVerified.toObject = function(includeInstance, msg) {
  var f, obj = {
    addressGuid: jspb.Message.getFieldWithDefault(msg, 1, ""),
    addressVerificationGuid: jspb.Message.getFieldWithDefault(msg, 2, ""),
    userData: (f = msg.getUserData()) && pando_api_shared_pb.UserMetadata.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.pando.api.contact.v1.AddressVerified}
 */
proto.pando.api.contact.v1.AddressVerified.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.pando.api.contact.v1.AddressVerified;
  return proto.pando.api.contact.v1.AddressVerified.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.pando.api.contact.v1.AddressVerified} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.pando.api.contact.v1.AddressVerified}
 */
proto.pando.api.contact.v1.AddressVerified.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setAddressGuid(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setAddressVerificationGuid(value);
      break;
    case 1000:
      var value = new pando_api_shared_pb.UserMetadata;
      reader.readMessage(value,pando_api_shared_pb.UserMetadata.deserializeBinaryFromReader);
      msg.setUserData(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.pando.api.contact.v1.AddressVerified.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.pando.api.contact.v1.AddressVerified.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.pando.api.contact.v1.AddressVerified} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.pando.api.contact.v1.AddressVerified.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getAddressGuid();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getAddressVerificationGuid();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getUserData();
  if (f != null) {
    writer.writeMessage(
      1000,
      f,
      pando_api_shared_pb.UserMetadata.serializeBinaryToWriter
    );
  }
};


/**
 * optional string address_guid = 1;
 * @return {string}
 */
proto.pando.api.contact.v1.AddressVerified.prototype.getAddressGuid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.pando.api.contact.v1.AddressVerified} returns this
 */
proto.pando.api.contact.v1.AddressVerified.prototype.setAddressGuid = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string address_verification_guid = 2;
 * @return {string}
 */
proto.pando.api.contact.v1.AddressVerified.prototype.getAddressVerificationGuid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.pando.api.contact.v1.AddressVerified} returns this
 */
proto.pando.api.contact.v1.AddressVerified.prototype.setAddressVerificationGuid = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional pando.api.UserMetadata user_data = 1000;
 * @return {?proto.pando.api.UserMetadata}
 */
proto.pando.api.contact.v1.AddressVerified.prototype.getUserData = function() {
  return /** @type{?proto.pando.api.UserMetadata} */ (
    jspb.Message.getWrapperField(this, pando_api_shared_pb.UserMetadata, 1000));
};


/**
 * @param {?proto.pando.api.UserMetadata|undefined} value
 * @return {!proto.pando.api.contact.v1.AddressVerified} returns this
*/
proto.pando.api.contact.v1.AddressVerified.prototype.setUserData = function(value) {
  return jspb.Message.setWrapperField(this, 1000, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.pando.api.contact.v1.AddressVerified} returns this
 */
proto.pando.api.contact.v1.AddressVerified.prototype.clearUserData = function() {
  return this.setUserData(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.pando.api.contact.v1.AddressVerified.prototype.hasUserData = function() {
  return jspb.Message.getField(this, 1000) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.pando.api.contact.v1.ContactQualified.prototype.toObject = function(opt_includeInstance) {
  return proto.pando.api.contact.v1.ContactQualified.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.pando.api.contact.v1.ContactQualified} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.pando.api.contact.v1.ContactQualified.toObject = function(includeInstance, msg) {
  var f, obj = {
    contactGuid: jspb.Message.getFieldWithDefault(msg, 1, ""),
    contactQualificationGuid: jspb.Message.getFieldWithDefault(msg, 2, ""),
    userData: (f = msg.getUserData()) && pando_api_shared_pb.UserMetadata.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.pando.api.contact.v1.ContactQualified}
 */
proto.pando.api.contact.v1.ContactQualified.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.pando.api.contact.v1.ContactQualified;
  return proto.pando.api.contact.v1.ContactQualified.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.pando.api.contact.v1.ContactQualified} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.pando.api.contact.v1.ContactQualified}
 */
proto.pando.api.contact.v1.ContactQualified.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setContactGuid(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setContactQualificationGuid(value);
      break;
    case 1000:
      var value = new pando_api_shared_pb.UserMetadata;
      reader.readMessage(value,pando_api_shared_pb.UserMetadata.deserializeBinaryFromReader);
      msg.setUserData(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.pando.api.contact.v1.ContactQualified.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.pando.api.contact.v1.ContactQualified.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.pando.api.contact.v1.ContactQualified} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.pando.api.contact.v1.ContactQualified.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getContactGuid();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getContactQualificationGuid();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getUserData();
  if (f != null) {
    writer.writeMessage(
      1000,
      f,
      pando_api_shared_pb.UserMetadata.serializeBinaryToWriter
    );
  }
};


/**
 * optional string contact_guid = 1;
 * @return {string}
 */
proto.pando.api.contact.v1.ContactQualified.prototype.getContactGuid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.pando.api.contact.v1.ContactQualified} returns this
 */
proto.pando.api.contact.v1.ContactQualified.prototype.setContactGuid = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string contact_qualification_guid = 2;
 * @return {string}
 */
proto.pando.api.contact.v1.ContactQualified.prototype.getContactQualificationGuid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.pando.api.contact.v1.ContactQualified} returns this
 */
proto.pando.api.contact.v1.ContactQualified.prototype.setContactQualificationGuid = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional pando.api.UserMetadata user_data = 1000;
 * @return {?proto.pando.api.UserMetadata}
 */
proto.pando.api.contact.v1.ContactQualified.prototype.getUserData = function() {
  return /** @type{?proto.pando.api.UserMetadata} */ (
    jspb.Message.getWrapperField(this, pando_api_shared_pb.UserMetadata, 1000));
};


/**
 * @param {?proto.pando.api.UserMetadata|undefined} value
 * @return {!proto.pando.api.contact.v1.ContactQualified} returns this
*/
proto.pando.api.contact.v1.ContactQualified.prototype.setUserData = function(value) {
  return jspb.Message.setWrapperField(this, 1000, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.pando.api.contact.v1.ContactQualified} returns this
 */
proto.pando.api.contact.v1.ContactQualified.prototype.clearUserData = function() {
  return this.setUserData(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.pando.api.contact.v1.ContactQualified.prototype.hasUserData = function() {
  return jspb.Message.getField(this, 1000) != null;
};


/**
 * @enum {number}
 */
proto.pando.api.contact.v1.Events = {
  ACCOUNT_CREATED: 0,
  ACCOUNT_RETRIEVED: 1,
  ACCOUNTS_RETRIEVED: 2,
  ACCOUNT_UPDATED: 3,
  ACCOUNT_DELETED: 4,
  ADDRESS_CREATED: 5,
  ADDRESS_RETRIEVED: 6,
  ADDRESSES_RETRIEVED: 7,
  ADDRESS_UPDATED: 8,
  ADDRESS_DELETED: 9,
  ADDRESS_VERIFIED: 10,
  CONTACT_CREATED: 11,
  CONTACT_RETRIEVED: 12,
  CONTACTS_RETRIEVED: 13,
  CONTACT_UPDATED: 14,
  CONTACT_DELETED: 15,
  CONTACT_QUALIFIED: 16
};

goog.object.extend(exports, proto.pando.api.contact.v1);
