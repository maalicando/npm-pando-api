// source: pando/api/alarm/v0/equipment-model.proto
/**
 * @fileoverview
 * @enhanceable
 * @suppress {missingRequire} reports error on implicit type usages.
 * @suppress {messageConventions} JS Compiler reports an error if a variable or
 *     field starts with 'MSG_' and isn't a translatable message.
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!
/* eslint-disable */
// @ts-nocheck

var jspb = require('google-protobuf');
var goog = jspb;
var global = Function('return this')();

goog.exportSymbol('proto.equipment.Extension', null, global);
goog.exportSymbol('proto.equipment.ExtensionList', null, global);
goog.exportSymbol('proto.equipment.ExtensionValue', null, global);
goog.exportSymbol('proto.equipment.ExtensionValueList', null, global);
goog.exportSymbol('proto.equipment.Model', null, global);
goog.exportSymbol('proto.equipment.ModelList', null, global);
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.equipment.Model = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.equipment.Model, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.equipment.Model.displayName = 'proto.equipment.Model';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.equipment.Extension = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.equipment.Extension, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.equipment.Extension.displayName = 'proto.equipment.Extension';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.equipment.ExtensionValue = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.equipment.ExtensionValue, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.equipment.ExtensionValue.displayName = 'proto.equipment.ExtensionValue';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.equipment.ModelList = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.equipment.ModelList.repeatedFields_, null);
};
goog.inherits(proto.equipment.ModelList, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.equipment.ModelList.displayName = 'proto.equipment.ModelList';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.equipment.ExtensionList = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.equipment.ExtensionList.repeatedFields_, null);
};
goog.inherits(proto.equipment.ExtensionList, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.equipment.ExtensionList.displayName = 'proto.equipment.ExtensionList';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.equipment.ExtensionValueList = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.equipment.ExtensionValueList.repeatedFields_, null);
};
goog.inherits(proto.equipment.ExtensionValueList, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.equipment.ExtensionValueList.displayName = 'proto.equipment.ExtensionValueList';
}



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.equipment.Model.prototype.toObject = function(opt_includeInstance) {
  return proto.equipment.Model.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.equipment.Model} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.equipment.Model.toObject = function(includeInstance, msg) {
  var f, obj = {
    equipmentGuid: jspb.Message.getFieldWithDefault(msg, 1, ""),
    partNumber: jspb.Message.getFieldWithDefault(msg, 2, ""),
    displayName: jspb.Message.getFieldWithDefault(msg, 3, ""),
    description: jspb.Message.getFieldWithDefault(msg, 4, ""),
    manufacturer: jspb.Message.getFieldWithDefault(msg, 5, ""),
    cost: jspb.Message.getFloatingPointFieldWithDefault(msg, 6, 0.0),
    retailPrice: jspb.Message.getFloatingPointFieldWithDefault(msg, 7, 0.0),
    isActive: jspb.Message.getBooleanFieldWithDefault(msg, 8, false),
    dateCreated: jspb.Message.getFieldWithDefault(msg, 9, ""),
    dateLastUpdated: jspb.Message.getFieldWithDefault(msg, 10, ""),
    allowExisting: jspb.Message.getBooleanFieldWithDefault(msg, 11, false),
    shippingWeightLbs: jspb.Message.getFloatingPointFieldWithDefault(msg, 12, 0.0),
    isProgrammable: jspb.Message.getBooleanFieldWithDefault(msg, 13, false)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.equipment.Model}
 */
proto.equipment.Model.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.equipment.Model;
  return proto.equipment.Model.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.equipment.Model} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.equipment.Model}
 */
proto.equipment.Model.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setEquipmentGuid(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setPartNumber(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setDisplayName(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setDescription(value);
      break;
    case 5:
      var value = /** @type {string} */ (reader.readString());
      msg.setManufacturer(value);
      break;
    case 6:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setCost(value);
      break;
    case 7:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setRetailPrice(value);
      break;
    case 8:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setIsActive(value);
      break;
    case 9:
      var value = /** @type {string} */ (reader.readString());
      msg.setDateCreated(value);
      break;
    case 10:
      var value = /** @type {string} */ (reader.readString());
      msg.setDateLastUpdated(value);
      break;
    case 11:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setAllowExisting(value);
      break;
    case 12:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setShippingWeightLbs(value);
      break;
    case 13:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setIsProgrammable(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.equipment.Model.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.equipment.Model.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.equipment.Model} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.equipment.Model.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getEquipmentGuid();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getPartNumber();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getDisplayName();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getDescription();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
  f = message.getManufacturer();
  if (f.length > 0) {
    writer.writeString(
      5,
      f
    );
  }
  f = message.getCost();
  if (f !== 0.0) {
    writer.writeDouble(
      6,
      f
    );
  }
  f = message.getRetailPrice();
  if (f !== 0.0) {
    writer.writeDouble(
      7,
      f
    );
  }
  f = message.getIsActive();
  if (f) {
    writer.writeBool(
      8,
      f
    );
  }
  f = message.getDateCreated();
  if (f.length > 0) {
    writer.writeString(
      9,
      f
    );
  }
  f = message.getDateLastUpdated();
  if (f.length > 0) {
    writer.writeString(
      10,
      f
    );
  }
  f = message.getAllowExisting();
  if (f) {
    writer.writeBool(
      11,
      f
    );
  }
  f = message.getShippingWeightLbs();
  if (f !== 0.0) {
    writer.writeDouble(
      12,
      f
    );
  }
  f = message.getIsProgrammable();
  if (f) {
    writer.writeBool(
      13,
      f
    );
  }
};


/**
 * optional string equipment_guid = 1;
 * @return {string}
 */
proto.equipment.Model.prototype.getEquipmentGuid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.equipment.Model} returns this
 */
proto.equipment.Model.prototype.setEquipmentGuid = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string part_number = 2;
 * @return {string}
 */
proto.equipment.Model.prototype.getPartNumber = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.equipment.Model} returns this
 */
proto.equipment.Model.prototype.setPartNumber = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string display_name = 3;
 * @return {string}
 */
proto.equipment.Model.prototype.getDisplayName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.equipment.Model} returns this
 */
proto.equipment.Model.prototype.setDisplayName = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional string description = 4;
 * @return {string}
 */
proto.equipment.Model.prototype.getDescription = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.equipment.Model} returns this
 */
proto.equipment.Model.prototype.setDescription = function(value) {
  return jspb.Message.setProto3StringField(this, 4, value);
};


/**
 * optional string manufacturer = 5;
 * @return {string}
 */
proto.equipment.Model.prototype.getManufacturer = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, ""));
};


/**
 * @param {string} value
 * @return {!proto.equipment.Model} returns this
 */
proto.equipment.Model.prototype.setManufacturer = function(value) {
  return jspb.Message.setProto3StringField(this, 5, value);
};


/**
 * optional double cost = 6;
 * @return {number}
 */
proto.equipment.Model.prototype.getCost = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 6, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.equipment.Model} returns this
 */
proto.equipment.Model.prototype.setCost = function(value) {
  return jspb.Message.setProto3FloatField(this, 6, value);
};


/**
 * optional double retail_price = 7;
 * @return {number}
 */
proto.equipment.Model.prototype.getRetailPrice = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 7, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.equipment.Model} returns this
 */
proto.equipment.Model.prototype.setRetailPrice = function(value) {
  return jspb.Message.setProto3FloatField(this, 7, value);
};


/**
 * optional bool is_active = 8;
 * @return {boolean}
 */
proto.equipment.Model.prototype.getIsActive = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 8, false));
};


/**
 * @param {boolean} value
 * @return {!proto.equipment.Model} returns this
 */
proto.equipment.Model.prototype.setIsActive = function(value) {
  return jspb.Message.setProto3BooleanField(this, 8, value);
};


/**
 * optional string date_created = 9;
 * @return {string}
 */
proto.equipment.Model.prototype.getDateCreated = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 9, ""));
};


/**
 * @param {string} value
 * @return {!proto.equipment.Model} returns this
 */
proto.equipment.Model.prototype.setDateCreated = function(value) {
  return jspb.Message.setProto3StringField(this, 9, value);
};


/**
 * optional string date_last_updated = 10;
 * @return {string}
 */
proto.equipment.Model.prototype.getDateLastUpdated = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 10, ""));
};


/**
 * @param {string} value
 * @return {!proto.equipment.Model} returns this
 */
proto.equipment.Model.prototype.setDateLastUpdated = function(value) {
  return jspb.Message.setProto3StringField(this, 10, value);
};


/**
 * optional bool allow_existing = 11;
 * @return {boolean}
 */
proto.equipment.Model.prototype.getAllowExisting = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 11, false));
};


/**
 * @param {boolean} value
 * @return {!proto.equipment.Model} returns this
 */
proto.equipment.Model.prototype.setAllowExisting = function(value) {
  return jspb.Message.setProto3BooleanField(this, 11, value);
};


/**
 * optional double shipping_weight_lbs = 12;
 * @return {number}
 */
proto.equipment.Model.prototype.getShippingWeightLbs = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 12, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.equipment.Model} returns this
 */
proto.equipment.Model.prototype.setShippingWeightLbs = function(value) {
  return jspb.Message.setProto3FloatField(this, 12, value);
};


/**
 * optional bool is_programmable = 13;
 * @return {boolean}
 */
proto.equipment.Model.prototype.getIsProgrammable = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 13, false));
};


/**
 * @param {boolean} value
 * @return {!proto.equipment.Model} returns this
 */
proto.equipment.Model.prototype.setIsProgrammable = function(value) {
  return jspb.Message.setProto3BooleanField(this, 13, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.equipment.Extension.prototype.toObject = function(opt_includeInstance) {
  return proto.equipment.Extension.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.equipment.Extension} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.equipment.Extension.toObject = function(includeInstance, msg) {
  var f, obj = {
    columnName: jspb.Message.getFieldWithDefault(msg, 1, ""),
    columnType: jspb.Message.getFieldWithDefault(msg, 2, ""),
    columnDescription: jspb.Message.getFieldWithDefault(msg, 3, ""),
    isActive: jspb.Message.getBooleanFieldWithDefault(msg, 4, false),
    defaultValue: jspb.Message.getFieldWithDefault(msg, 5, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.equipment.Extension}
 */
proto.equipment.Extension.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.equipment.Extension;
  return proto.equipment.Extension.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.equipment.Extension} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.equipment.Extension}
 */
proto.equipment.Extension.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setColumnName(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setColumnType(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setColumnDescription(value);
      break;
    case 4:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setIsActive(value);
      break;
    case 5:
      var value = /** @type {string} */ (reader.readString());
      msg.setDefaultValue(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.equipment.Extension.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.equipment.Extension.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.equipment.Extension} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.equipment.Extension.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getColumnName();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getColumnType();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getColumnDescription();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getIsActive();
  if (f) {
    writer.writeBool(
      4,
      f
    );
  }
  f = message.getDefaultValue();
  if (f.length > 0) {
    writer.writeString(
      5,
      f
    );
  }
};


/**
 * optional string column_name = 1;
 * @return {string}
 */
proto.equipment.Extension.prototype.getColumnName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.equipment.Extension} returns this
 */
proto.equipment.Extension.prototype.setColumnName = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string column_type = 2;
 * @return {string}
 */
proto.equipment.Extension.prototype.getColumnType = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.equipment.Extension} returns this
 */
proto.equipment.Extension.prototype.setColumnType = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string column_description = 3;
 * @return {string}
 */
proto.equipment.Extension.prototype.getColumnDescription = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.equipment.Extension} returns this
 */
proto.equipment.Extension.prototype.setColumnDescription = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional bool is_active = 4;
 * @return {boolean}
 */
proto.equipment.Extension.prototype.getIsActive = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 4, false));
};


/**
 * @param {boolean} value
 * @return {!proto.equipment.Extension} returns this
 */
proto.equipment.Extension.prototype.setIsActive = function(value) {
  return jspb.Message.setProto3BooleanField(this, 4, value);
};


/**
 * optional string default_value = 5;
 * @return {string}
 */
proto.equipment.Extension.prototype.getDefaultValue = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, ""));
};


/**
 * @param {string} value
 * @return {!proto.equipment.Extension} returns this
 */
proto.equipment.Extension.prototype.setDefaultValue = function(value) {
  return jspb.Message.setProto3StringField(this, 5, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.equipment.ExtensionValue.prototype.toObject = function(opt_includeInstance) {
  return proto.equipment.ExtensionValue.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.equipment.ExtensionValue} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.equipment.ExtensionValue.toObject = function(includeInstance, msg) {
  var f, obj = {
    equipmentGuid: jspb.Message.getFieldWithDefault(msg, 1, ""),
    columnName: jspb.Message.getFieldWithDefault(msg, 2, ""),
    columnValue: jspb.Message.getFieldWithDefault(msg, 3, ""),
    isActive: jspb.Message.getBooleanFieldWithDefault(msg, 4, false)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.equipment.ExtensionValue}
 */
proto.equipment.ExtensionValue.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.equipment.ExtensionValue;
  return proto.equipment.ExtensionValue.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.equipment.ExtensionValue} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.equipment.ExtensionValue}
 */
proto.equipment.ExtensionValue.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setEquipmentGuid(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setColumnName(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setColumnValue(value);
      break;
    case 4:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setIsActive(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.equipment.ExtensionValue.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.equipment.ExtensionValue.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.equipment.ExtensionValue} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.equipment.ExtensionValue.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getEquipmentGuid();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getColumnName();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getColumnValue();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getIsActive();
  if (f) {
    writer.writeBool(
      4,
      f
    );
  }
};


/**
 * optional string equipment_guid = 1;
 * @return {string}
 */
proto.equipment.ExtensionValue.prototype.getEquipmentGuid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.equipment.ExtensionValue} returns this
 */
proto.equipment.ExtensionValue.prototype.setEquipmentGuid = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string column_name = 2;
 * @return {string}
 */
proto.equipment.ExtensionValue.prototype.getColumnName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.equipment.ExtensionValue} returns this
 */
proto.equipment.ExtensionValue.prototype.setColumnName = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string column_value = 3;
 * @return {string}
 */
proto.equipment.ExtensionValue.prototype.getColumnValue = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.equipment.ExtensionValue} returns this
 */
proto.equipment.ExtensionValue.prototype.setColumnValue = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional bool is_active = 4;
 * @return {boolean}
 */
proto.equipment.ExtensionValue.prototype.getIsActive = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 4, false));
};


/**
 * @param {boolean} value
 * @return {!proto.equipment.ExtensionValue} returns this
 */
proto.equipment.ExtensionValue.prototype.setIsActive = function(value) {
  return jspb.Message.setProto3BooleanField(this, 4, value);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.equipment.ModelList.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.equipment.ModelList.prototype.toObject = function(opt_includeInstance) {
  return proto.equipment.ModelList.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.equipment.ModelList} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.equipment.ModelList.toObject = function(includeInstance, msg) {
  var f, obj = {
    equipmentListList: jspb.Message.toObjectList(msg.getEquipmentListList(),
    proto.equipment.Model.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.equipment.ModelList}
 */
proto.equipment.ModelList.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.equipment.ModelList;
  return proto.equipment.ModelList.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.equipment.ModelList} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.equipment.ModelList}
 */
proto.equipment.ModelList.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.equipment.Model;
      reader.readMessage(value,proto.equipment.Model.deserializeBinaryFromReader);
      msg.addEquipmentList(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.equipment.ModelList.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.equipment.ModelList.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.equipment.ModelList} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.equipment.ModelList.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getEquipmentListList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      proto.equipment.Model.serializeBinaryToWriter
    );
  }
};


/**
 * repeated Model equipment_list = 1;
 * @return {!Array<!proto.equipment.Model>}
 */
proto.equipment.ModelList.prototype.getEquipmentListList = function() {
  return /** @type{!Array<!proto.equipment.Model>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.equipment.Model, 1));
};


/**
 * @param {!Array<!proto.equipment.Model>} value
 * @return {!proto.equipment.ModelList} returns this
*/
proto.equipment.ModelList.prototype.setEquipmentListList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.equipment.Model=} opt_value
 * @param {number=} opt_index
 * @return {!proto.equipment.Model}
 */
proto.equipment.ModelList.prototype.addEquipmentList = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.equipment.Model, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.equipment.ModelList} returns this
 */
proto.equipment.ModelList.prototype.clearEquipmentListList = function() {
  return this.setEquipmentListList([]);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.equipment.ExtensionList.repeatedFields_ = [2];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.equipment.ExtensionList.prototype.toObject = function(opt_includeInstance) {
  return proto.equipment.ExtensionList.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.equipment.ExtensionList} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.equipment.ExtensionList.toObject = function(includeInstance, msg) {
  var f, obj = {
    extensionsList: jspb.Message.toObjectList(msg.getExtensionsList(),
    proto.equipment.Extension.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.equipment.ExtensionList}
 */
proto.equipment.ExtensionList.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.equipment.ExtensionList;
  return proto.equipment.ExtensionList.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.equipment.ExtensionList} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.equipment.ExtensionList}
 */
proto.equipment.ExtensionList.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 2:
      var value = new proto.equipment.Extension;
      reader.readMessage(value,proto.equipment.Extension.deserializeBinaryFromReader);
      msg.addExtensions(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.equipment.ExtensionList.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.equipment.ExtensionList.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.equipment.ExtensionList} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.equipment.ExtensionList.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getExtensionsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      2,
      f,
      proto.equipment.Extension.serializeBinaryToWriter
    );
  }
};


/**
 * repeated Extension extensions = 2;
 * @return {!Array<!proto.equipment.Extension>}
 */
proto.equipment.ExtensionList.prototype.getExtensionsList = function() {
  return /** @type{!Array<!proto.equipment.Extension>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.equipment.Extension, 2));
};


/**
 * @param {!Array<!proto.equipment.Extension>} value
 * @return {!proto.equipment.ExtensionList} returns this
*/
proto.equipment.ExtensionList.prototype.setExtensionsList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 2, value);
};


/**
 * @param {!proto.equipment.Extension=} opt_value
 * @param {number=} opt_index
 * @return {!proto.equipment.Extension}
 */
proto.equipment.ExtensionList.prototype.addExtensions = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 2, opt_value, proto.equipment.Extension, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.equipment.ExtensionList} returns this
 */
proto.equipment.ExtensionList.prototype.clearExtensionsList = function() {
  return this.setExtensionsList([]);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.equipment.ExtensionValueList.repeatedFields_ = [2];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.equipment.ExtensionValueList.prototype.toObject = function(opt_includeInstance) {
  return proto.equipment.ExtensionValueList.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.equipment.ExtensionValueList} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.equipment.ExtensionValueList.toObject = function(includeInstance, msg) {
  var f, obj = {
    equipmentGuid: jspb.Message.getFieldWithDefault(msg, 1, ""),
    extensionValuesList: jspb.Message.toObjectList(msg.getExtensionValuesList(),
    proto.equipment.ExtensionValue.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.equipment.ExtensionValueList}
 */
proto.equipment.ExtensionValueList.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.equipment.ExtensionValueList;
  return proto.equipment.ExtensionValueList.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.equipment.ExtensionValueList} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.equipment.ExtensionValueList}
 */
proto.equipment.ExtensionValueList.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setEquipmentGuid(value);
      break;
    case 2:
      var value = new proto.equipment.ExtensionValue;
      reader.readMessage(value,proto.equipment.ExtensionValue.deserializeBinaryFromReader);
      msg.addExtensionValues(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.equipment.ExtensionValueList.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.equipment.ExtensionValueList.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.equipment.ExtensionValueList} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.equipment.ExtensionValueList.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getEquipmentGuid();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getExtensionValuesList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      2,
      f,
      proto.equipment.ExtensionValue.serializeBinaryToWriter
    );
  }
};


/**
 * optional string equipment_guid = 1;
 * @return {string}
 */
proto.equipment.ExtensionValueList.prototype.getEquipmentGuid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.equipment.ExtensionValueList} returns this
 */
proto.equipment.ExtensionValueList.prototype.setEquipmentGuid = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * repeated ExtensionValue extension_values = 2;
 * @return {!Array<!proto.equipment.ExtensionValue>}
 */
proto.equipment.ExtensionValueList.prototype.getExtensionValuesList = function() {
  return /** @type{!Array<!proto.equipment.ExtensionValue>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.equipment.ExtensionValue, 2));
};


/**
 * @param {!Array<!proto.equipment.ExtensionValue>} value
 * @return {!proto.equipment.ExtensionValueList} returns this
*/
proto.equipment.ExtensionValueList.prototype.setExtensionValuesList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 2, value);
};


/**
 * @param {!proto.equipment.ExtensionValue=} opt_value
 * @param {number=} opt_index
 * @return {!proto.equipment.ExtensionValue}
 */
proto.equipment.ExtensionValueList.prototype.addExtensionValues = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 2, opt_value, proto.equipment.ExtensionValue, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.equipment.ExtensionValueList} returns this
 */
proto.equipment.ExtensionValueList.prototype.clearExtensionValuesList = function() {
  return this.setExtensionValuesList([]);
};


goog.object.extend(exports, proto.equipment);
