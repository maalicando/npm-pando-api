// source: pando/api/alarm/v0/panel.proto
/**
 * @fileoverview
 * @enhanceable
 * @suppress {missingRequire} reports error on implicit type usages.
 * @suppress {messageConventions} JS Compiler reports an error if a variable or
 *     field starts with 'MSG_' and isn't a translatable message.
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!
/* eslint-disable */
// @ts-nocheck

var jspb = require('google-protobuf');
var goog = jspb;
var global = Function('return this')();

var pando_api_alarm_v0_equipment$model_pb = require('../../../../pando/api/alarm/v0/equipment-model_pb.js');
goog.object.extend(proto, pando_api_alarm_v0_equipment$model_pb);
var pando_api_alarm_v0_panel$model_pb = require('../../../../pando/api/alarm/v0/panel-model_pb.js');
goog.object.extend(proto, pando_api_alarm_v0_panel$model_pb);
var pando_api_extensions_pb = require('../../../../pando/api/extensions_pb.js');
goog.object.extend(proto, pando_api_extensions_pb);
var pando_api_shared_pb = require('../../../../pando/api/shared_pb.js');
goog.object.extend(proto, pando_api_shared_pb);
goog.exportSymbol('proto.panel_service.EditCompatibleEquipmentRequest', null, global);
goog.exportSymbol('proto.panel_service.EditPanelEquipmentRequest', null, global);
goog.exportSymbol('proto.panel_service.GetPanelConfigurationGuidListRequest', null, global);
goog.exportSymbol('proto.panel_service.GetPanelConfigurationRequest', null, global);
goog.exportSymbol('proto.panel_service.GetPanelEquipmentGroupsRequest', null, global);
goog.exportSymbol('proto.panel_service.GetPanelTypeRequest', null, global);
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.panel_service.GetPanelTypeRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.panel_service.GetPanelTypeRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.panel_service.GetPanelTypeRequest.displayName = 'proto.panel_service.GetPanelTypeRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.panel_service.GetPanelConfigurationRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.panel_service.GetPanelConfigurationRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.panel_service.GetPanelConfigurationRequest.displayName = 'proto.panel_service.GetPanelConfigurationRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.panel_service.GetPanelEquipmentGroupsRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.panel_service.GetPanelEquipmentGroupsRequest.repeatedFields_, null);
};
goog.inherits(proto.panel_service.GetPanelEquipmentGroupsRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.panel_service.GetPanelEquipmentGroupsRequest.displayName = 'proto.panel_service.GetPanelEquipmentGroupsRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.panel_service.GetPanelConfigurationGuidListRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.panel_service.GetPanelConfigurationGuidListRequest.repeatedFields_, null);
};
goog.inherits(proto.panel_service.GetPanelConfigurationGuidListRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.panel_service.GetPanelConfigurationGuidListRequest.displayName = 'proto.panel_service.GetPanelConfigurationGuidListRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.panel_service.EditCompatibleEquipmentRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.panel_service.EditCompatibleEquipmentRequest.repeatedFields_, null);
};
goog.inherits(proto.panel_service.EditCompatibleEquipmentRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.panel_service.EditCompatibleEquipmentRequest.displayName = 'proto.panel_service.EditCompatibleEquipmentRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.panel_service.EditPanelEquipmentRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.panel_service.EditPanelEquipmentRequest.repeatedFields_, null);
};
goog.inherits(proto.panel_service.EditPanelEquipmentRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.panel_service.EditPanelEquipmentRequest.displayName = 'proto.panel_service.EditPanelEquipmentRequest';
}



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.panel_service.GetPanelTypeRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.panel_service.GetPanelTypeRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.panel_service.GetPanelTypeRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.panel_service.GetPanelTypeRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    panelCode: jspb.Message.getFieldWithDefault(msg, 1, ""),
    includeInactive: jspb.Message.getBooleanFieldWithDefault(msg, 2, false)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.panel_service.GetPanelTypeRequest}
 */
proto.panel_service.GetPanelTypeRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.panel_service.GetPanelTypeRequest;
  return proto.panel_service.GetPanelTypeRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.panel_service.GetPanelTypeRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.panel_service.GetPanelTypeRequest}
 */
proto.panel_service.GetPanelTypeRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setPanelCode(value);
      break;
    case 2:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setIncludeInactive(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.panel_service.GetPanelTypeRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.panel_service.GetPanelTypeRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.panel_service.GetPanelTypeRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.panel_service.GetPanelTypeRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getPanelCode();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getIncludeInactive();
  if (f) {
    writer.writeBool(
      2,
      f
    );
  }
};


/**
 * optional string panel_code = 1;
 * @return {string}
 */
proto.panel_service.GetPanelTypeRequest.prototype.getPanelCode = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.panel_service.GetPanelTypeRequest} returns this
 */
proto.panel_service.GetPanelTypeRequest.prototype.setPanelCode = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional bool include_inactive = 2;
 * @return {boolean}
 */
proto.panel_service.GetPanelTypeRequest.prototype.getIncludeInactive = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 2, false));
};


/**
 * @param {boolean} value
 * @return {!proto.panel_service.GetPanelTypeRequest} returns this
 */
proto.panel_service.GetPanelTypeRequest.prototype.setIncludeInactive = function(value) {
  return jspb.Message.setProto3BooleanField(this, 2, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.panel_service.GetPanelConfigurationRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.panel_service.GetPanelConfigurationRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.panel_service.GetPanelConfigurationRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.panel_service.GetPanelConfigurationRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    panelConfigurationGuid: jspb.Message.getFieldWithDefault(msg, 1, ""),
    includeInactive: jspb.Message.getBooleanFieldWithDefault(msg, 2, false)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.panel_service.GetPanelConfigurationRequest}
 */
proto.panel_service.GetPanelConfigurationRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.panel_service.GetPanelConfigurationRequest;
  return proto.panel_service.GetPanelConfigurationRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.panel_service.GetPanelConfigurationRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.panel_service.GetPanelConfigurationRequest}
 */
proto.panel_service.GetPanelConfigurationRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setPanelConfigurationGuid(value);
      break;
    case 2:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setIncludeInactive(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.panel_service.GetPanelConfigurationRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.panel_service.GetPanelConfigurationRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.panel_service.GetPanelConfigurationRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.panel_service.GetPanelConfigurationRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getPanelConfigurationGuid();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getIncludeInactive();
  if (f) {
    writer.writeBool(
      2,
      f
    );
  }
};


/**
 * optional string panel_configuration_guid = 1;
 * @return {string}
 */
proto.panel_service.GetPanelConfigurationRequest.prototype.getPanelConfigurationGuid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.panel_service.GetPanelConfigurationRequest} returns this
 */
proto.panel_service.GetPanelConfigurationRequest.prototype.setPanelConfigurationGuid = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional bool include_inactive = 2;
 * @return {boolean}
 */
proto.panel_service.GetPanelConfigurationRequest.prototype.getIncludeInactive = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 2, false));
};


/**
 * @param {boolean} value
 * @return {!proto.panel_service.GetPanelConfigurationRequest} returns this
 */
proto.panel_service.GetPanelConfigurationRequest.prototype.setIncludeInactive = function(value) {
  return jspb.Message.setProto3BooleanField(this, 2, value);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.panel_service.GetPanelEquipmentGroupsRequest.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.panel_service.GetPanelEquipmentGroupsRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.panel_service.GetPanelEquipmentGroupsRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.panel_service.GetPanelEquipmentGroupsRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.panel_service.GetPanelEquipmentGroupsRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    groupCodesList: (f = jspb.Message.getRepeatedField(msg, 1)) == null ? undefined : f,
    includeInactive: jspb.Message.getBooleanFieldWithDefault(msg, 2, false)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.panel_service.GetPanelEquipmentGroupsRequest}
 */
proto.panel_service.GetPanelEquipmentGroupsRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.panel_service.GetPanelEquipmentGroupsRequest;
  return proto.panel_service.GetPanelEquipmentGroupsRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.panel_service.GetPanelEquipmentGroupsRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.panel_service.GetPanelEquipmentGroupsRequest}
 */
proto.panel_service.GetPanelEquipmentGroupsRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.addGroupCodes(value);
      break;
    case 2:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setIncludeInactive(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.panel_service.GetPanelEquipmentGroupsRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.panel_service.GetPanelEquipmentGroupsRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.panel_service.GetPanelEquipmentGroupsRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.panel_service.GetPanelEquipmentGroupsRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getGroupCodesList();
  if (f.length > 0) {
    writer.writeRepeatedString(
      1,
      f
    );
  }
  f = message.getIncludeInactive();
  if (f) {
    writer.writeBool(
      2,
      f
    );
  }
};


/**
 * repeated string group_codes = 1;
 * @return {!Array<string>}
 */
proto.panel_service.GetPanelEquipmentGroupsRequest.prototype.getGroupCodesList = function() {
  return /** @type {!Array<string>} */ (jspb.Message.getRepeatedField(this, 1));
};


/**
 * @param {!Array<string>} value
 * @return {!proto.panel_service.GetPanelEquipmentGroupsRequest} returns this
 */
proto.panel_service.GetPanelEquipmentGroupsRequest.prototype.setGroupCodesList = function(value) {
  return jspb.Message.setField(this, 1, value || []);
};


/**
 * @param {string} value
 * @param {number=} opt_index
 * @return {!proto.panel_service.GetPanelEquipmentGroupsRequest} returns this
 */
proto.panel_service.GetPanelEquipmentGroupsRequest.prototype.addGroupCodes = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 1, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.panel_service.GetPanelEquipmentGroupsRequest} returns this
 */
proto.panel_service.GetPanelEquipmentGroupsRequest.prototype.clearGroupCodesList = function() {
  return this.setGroupCodesList([]);
};


/**
 * optional bool include_inactive = 2;
 * @return {boolean}
 */
proto.panel_service.GetPanelEquipmentGroupsRequest.prototype.getIncludeInactive = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 2, false));
};


/**
 * @param {boolean} value
 * @return {!proto.panel_service.GetPanelEquipmentGroupsRequest} returns this
 */
proto.panel_service.GetPanelEquipmentGroupsRequest.prototype.setIncludeInactive = function(value) {
  return jspb.Message.setProto3BooleanField(this, 2, value);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.panel_service.GetPanelConfigurationGuidListRequest.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.panel_service.GetPanelConfigurationGuidListRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.panel_service.GetPanelConfigurationGuidListRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.panel_service.GetPanelConfigurationGuidListRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.panel_service.GetPanelConfigurationGuidListRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    panelConfigurationGuidsList: (f = jspb.Message.getRepeatedField(msg, 1)) == null ? undefined : f,
    includeInactive: jspb.Message.getBooleanFieldWithDefault(msg, 2, false)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.panel_service.GetPanelConfigurationGuidListRequest}
 */
proto.panel_service.GetPanelConfigurationGuidListRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.panel_service.GetPanelConfigurationGuidListRequest;
  return proto.panel_service.GetPanelConfigurationGuidListRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.panel_service.GetPanelConfigurationGuidListRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.panel_service.GetPanelConfigurationGuidListRequest}
 */
proto.panel_service.GetPanelConfigurationGuidListRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.addPanelConfigurationGuids(value);
      break;
    case 2:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setIncludeInactive(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.panel_service.GetPanelConfigurationGuidListRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.panel_service.GetPanelConfigurationGuidListRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.panel_service.GetPanelConfigurationGuidListRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.panel_service.GetPanelConfigurationGuidListRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getPanelConfigurationGuidsList();
  if (f.length > 0) {
    writer.writeRepeatedString(
      1,
      f
    );
  }
  f = message.getIncludeInactive();
  if (f) {
    writer.writeBool(
      2,
      f
    );
  }
};


/**
 * repeated string panel_configuration_guids = 1;
 * @return {!Array<string>}
 */
proto.panel_service.GetPanelConfigurationGuidListRequest.prototype.getPanelConfigurationGuidsList = function() {
  return /** @type {!Array<string>} */ (jspb.Message.getRepeatedField(this, 1));
};


/**
 * @param {!Array<string>} value
 * @return {!proto.panel_service.GetPanelConfigurationGuidListRequest} returns this
 */
proto.panel_service.GetPanelConfigurationGuidListRequest.prototype.setPanelConfigurationGuidsList = function(value) {
  return jspb.Message.setField(this, 1, value || []);
};


/**
 * @param {string} value
 * @param {number=} opt_index
 * @return {!proto.panel_service.GetPanelConfigurationGuidListRequest} returns this
 */
proto.panel_service.GetPanelConfigurationGuidListRequest.prototype.addPanelConfigurationGuids = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 1, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.panel_service.GetPanelConfigurationGuidListRequest} returns this
 */
proto.panel_service.GetPanelConfigurationGuidListRequest.prototype.clearPanelConfigurationGuidsList = function() {
  return this.setPanelConfigurationGuidsList([]);
};


/**
 * optional bool include_inactive = 2;
 * @return {boolean}
 */
proto.panel_service.GetPanelConfigurationGuidListRequest.prototype.getIncludeInactive = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 2, false));
};


/**
 * @param {boolean} value
 * @return {!proto.panel_service.GetPanelConfigurationGuidListRequest} returns this
 */
proto.panel_service.GetPanelConfigurationGuidListRequest.prototype.setIncludeInactive = function(value) {
  return jspb.Message.setProto3BooleanField(this, 2, value);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.panel_service.EditCompatibleEquipmentRequest.repeatedFields_ = [2];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.panel_service.EditCompatibleEquipmentRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.panel_service.EditCompatibleEquipmentRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.panel_service.EditCompatibleEquipmentRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.panel_service.EditCompatibleEquipmentRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    panelCode: jspb.Message.getFieldWithDefault(msg, 1, ""),
    equipmentGuidsList: (f = jspb.Message.getRepeatedField(msg, 2)) == null ? undefined : f
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.panel_service.EditCompatibleEquipmentRequest}
 */
proto.panel_service.EditCompatibleEquipmentRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.panel_service.EditCompatibleEquipmentRequest;
  return proto.panel_service.EditCompatibleEquipmentRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.panel_service.EditCompatibleEquipmentRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.panel_service.EditCompatibleEquipmentRequest}
 */
proto.panel_service.EditCompatibleEquipmentRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setPanelCode(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.addEquipmentGuids(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.panel_service.EditCompatibleEquipmentRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.panel_service.EditCompatibleEquipmentRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.panel_service.EditCompatibleEquipmentRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.panel_service.EditCompatibleEquipmentRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getPanelCode();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getEquipmentGuidsList();
  if (f.length > 0) {
    writer.writeRepeatedString(
      2,
      f
    );
  }
};


/**
 * optional string panel_code = 1;
 * @return {string}
 */
proto.panel_service.EditCompatibleEquipmentRequest.prototype.getPanelCode = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.panel_service.EditCompatibleEquipmentRequest} returns this
 */
proto.panel_service.EditCompatibleEquipmentRequest.prototype.setPanelCode = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * repeated string equipment_guids = 2;
 * @return {!Array<string>}
 */
proto.panel_service.EditCompatibleEquipmentRequest.prototype.getEquipmentGuidsList = function() {
  return /** @type {!Array<string>} */ (jspb.Message.getRepeatedField(this, 2));
};


/**
 * @param {!Array<string>} value
 * @return {!proto.panel_service.EditCompatibleEquipmentRequest} returns this
 */
proto.panel_service.EditCompatibleEquipmentRequest.prototype.setEquipmentGuidsList = function(value) {
  return jspb.Message.setField(this, 2, value || []);
};


/**
 * @param {string} value
 * @param {number=} opt_index
 * @return {!proto.panel_service.EditCompatibleEquipmentRequest} returns this
 */
proto.panel_service.EditCompatibleEquipmentRequest.prototype.addEquipmentGuids = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 2, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.panel_service.EditCompatibleEquipmentRequest} returns this
 */
proto.panel_service.EditCompatibleEquipmentRequest.prototype.clearEquipmentGuidsList = function() {
  return this.setEquipmentGuidsList([]);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.panel_service.EditPanelEquipmentRequest.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.panel_service.EditPanelEquipmentRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.panel_service.EditPanelEquipmentRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.panel_service.EditPanelEquipmentRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.panel_service.EditPanelEquipmentRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    panelEquipmentListList: jspb.Message.toObjectList(msg.getPanelEquipmentListList(),
    pando_api_alarm_v0_panel$model_pb.PanelEquipment.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.panel_service.EditPanelEquipmentRequest}
 */
proto.panel_service.EditPanelEquipmentRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.panel_service.EditPanelEquipmentRequest;
  return proto.panel_service.EditPanelEquipmentRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.panel_service.EditPanelEquipmentRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.panel_service.EditPanelEquipmentRequest}
 */
proto.panel_service.EditPanelEquipmentRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new pando_api_alarm_v0_panel$model_pb.PanelEquipment;
      reader.readMessage(value,pando_api_alarm_v0_panel$model_pb.PanelEquipment.deserializeBinaryFromReader);
      msg.addPanelEquipmentList(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.panel_service.EditPanelEquipmentRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.panel_service.EditPanelEquipmentRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.panel_service.EditPanelEquipmentRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.panel_service.EditPanelEquipmentRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getPanelEquipmentListList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      pando_api_alarm_v0_panel$model_pb.PanelEquipment.serializeBinaryToWriter
    );
  }
};


/**
 * repeated panel.PanelEquipment panel_equipment_list = 1;
 * @return {!Array<!proto.panel.PanelEquipment>}
 */
proto.panel_service.EditPanelEquipmentRequest.prototype.getPanelEquipmentListList = function() {
  return /** @type{!Array<!proto.panel.PanelEquipment>} */ (
    jspb.Message.getRepeatedWrapperField(this, pando_api_alarm_v0_panel$model_pb.PanelEquipment, 1));
};


/**
 * @param {!Array<!proto.panel.PanelEquipment>} value
 * @return {!proto.panel_service.EditPanelEquipmentRequest} returns this
*/
proto.panel_service.EditPanelEquipmentRequest.prototype.setPanelEquipmentListList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.panel.PanelEquipment=} opt_value
 * @param {number=} opt_index
 * @return {!proto.panel.PanelEquipment}
 */
proto.panel_service.EditPanelEquipmentRequest.prototype.addPanelEquipmentList = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.panel.PanelEquipment, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.panel_service.EditPanelEquipmentRequest} returns this
 */
proto.panel_service.EditPanelEquipmentRequest.prototype.clearPanelEquipmentListList = function() {
  return this.setPanelEquipmentListList([]);
};


goog.object.extend(exports, proto.panel_service);
