// source: pando/api/alarm/v0/zonetype-model.proto
/**
 * @fileoverview
 * @enhanceable
 * @suppress {missingRequire} reports error on implicit type usages.
 * @suppress {messageConventions} JS Compiler reports an error if a variable or
 *     field starts with 'MSG_' and isn't a translatable message.
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!
/* eslint-disable */
// @ts-nocheck

var jspb = require('google-protobuf');
var goog = jspb;
var global = Function('return this')();

goog.exportSymbol('proto.zonetype.Model', null, global);
goog.exportSymbol('proto.zonetype.ModelList', null, global);
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.zonetype.Model = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.zonetype.Model, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.zonetype.Model.displayName = 'proto.zonetype.Model';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.zonetype.ModelList = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.zonetype.ModelList.repeatedFields_, null);
};
goog.inherits(proto.zonetype.ModelList, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.zonetype.ModelList.displayName = 'proto.zonetype.ModelList';
}



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.zonetype.Model.prototype.toObject = function(opt_includeInstance) {
  return proto.zonetype.Model.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.zonetype.Model} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.zonetype.Model.toObject = function(includeInstance, msg) {
  var f, obj = {
    zoneTypeGuid: jspb.Message.getFieldWithDefault(msg, 1, ""),
    zoneTypeName: jspb.Message.getFieldWithDefault(msg, 2, ""),
    zoneTypeDescription: jspb.Message.getFieldWithDefault(msg, 3, ""),
    zoneTypeValue: jspb.Message.getFieldWithDefault(msg, 4, ""),
    eventCode: jspb.Message.getFieldWithDefault(msg, 5, ""),
    centralStationCode: jspb.Message.getFieldWithDefault(msg, 6, ""),
    isActive: jspb.Message.getBooleanFieldWithDefault(msg, 7, false),
    value1: jspb.Message.getFieldWithDefault(msg, 8, ""),
    value2: jspb.Message.getFieldWithDefault(msg, 9, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.zonetype.Model}
 */
proto.zonetype.Model.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.zonetype.Model;
  return proto.zonetype.Model.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.zonetype.Model} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.zonetype.Model}
 */
proto.zonetype.Model.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setZoneTypeGuid(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setZoneTypeName(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setZoneTypeDescription(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setZoneTypeValue(value);
      break;
    case 5:
      var value = /** @type {string} */ (reader.readString());
      msg.setEventCode(value);
      break;
    case 6:
      var value = /** @type {string} */ (reader.readString());
      msg.setCentralStationCode(value);
      break;
    case 7:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setIsActive(value);
      break;
    case 8:
      var value = /** @type {string} */ (reader.readString());
      msg.setValue1(value);
      break;
    case 9:
      var value = /** @type {string} */ (reader.readString());
      msg.setValue2(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.zonetype.Model.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.zonetype.Model.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.zonetype.Model} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.zonetype.Model.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getZoneTypeGuid();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getZoneTypeName();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getZoneTypeDescription();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getZoneTypeValue();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
  f = message.getEventCode();
  if (f.length > 0) {
    writer.writeString(
      5,
      f
    );
  }
  f = message.getCentralStationCode();
  if (f.length > 0) {
    writer.writeString(
      6,
      f
    );
  }
  f = message.getIsActive();
  if (f) {
    writer.writeBool(
      7,
      f
    );
  }
  f = message.getValue1();
  if (f.length > 0) {
    writer.writeString(
      8,
      f
    );
  }
  f = message.getValue2();
  if (f.length > 0) {
    writer.writeString(
      9,
      f
    );
  }
};


/**
 * optional string zone_type_guid = 1;
 * @return {string}
 */
proto.zonetype.Model.prototype.getZoneTypeGuid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.zonetype.Model} returns this
 */
proto.zonetype.Model.prototype.setZoneTypeGuid = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string zone_type_name = 2;
 * @return {string}
 */
proto.zonetype.Model.prototype.getZoneTypeName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.zonetype.Model} returns this
 */
proto.zonetype.Model.prototype.setZoneTypeName = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string zone_type_description = 3;
 * @return {string}
 */
proto.zonetype.Model.prototype.getZoneTypeDescription = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.zonetype.Model} returns this
 */
proto.zonetype.Model.prototype.setZoneTypeDescription = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional string zone_type_value = 4;
 * @return {string}
 */
proto.zonetype.Model.prototype.getZoneTypeValue = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.zonetype.Model} returns this
 */
proto.zonetype.Model.prototype.setZoneTypeValue = function(value) {
  return jspb.Message.setProto3StringField(this, 4, value);
};


/**
 * optional string event_code = 5;
 * @return {string}
 */
proto.zonetype.Model.prototype.getEventCode = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, ""));
};


/**
 * @param {string} value
 * @return {!proto.zonetype.Model} returns this
 */
proto.zonetype.Model.prototype.setEventCode = function(value) {
  return jspb.Message.setProto3StringField(this, 5, value);
};


/**
 * optional string central_station_code = 6;
 * @return {string}
 */
proto.zonetype.Model.prototype.getCentralStationCode = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 6, ""));
};


/**
 * @param {string} value
 * @return {!proto.zonetype.Model} returns this
 */
proto.zonetype.Model.prototype.setCentralStationCode = function(value) {
  return jspb.Message.setProto3StringField(this, 6, value);
};


/**
 * optional bool is_active = 7;
 * @return {boolean}
 */
proto.zonetype.Model.prototype.getIsActive = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 7, false));
};


/**
 * @param {boolean} value
 * @return {!proto.zonetype.Model} returns this
 */
proto.zonetype.Model.prototype.setIsActive = function(value) {
  return jspb.Message.setProto3BooleanField(this, 7, value);
};


/**
 * optional string value_1 = 8;
 * @return {string}
 */
proto.zonetype.Model.prototype.getValue1 = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 8, ""));
};


/**
 * @param {string} value
 * @return {!proto.zonetype.Model} returns this
 */
proto.zonetype.Model.prototype.setValue1 = function(value) {
  return jspb.Message.setProto3StringField(this, 8, value);
};


/**
 * optional string value_2 = 9;
 * @return {string}
 */
proto.zonetype.Model.prototype.getValue2 = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 9, ""));
};


/**
 * @param {string} value
 * @return {!proto.zonetype.Model} returns this
 */
proto.zonetype.Model.prototype.setValue2 = function(value) {
  return jspb.Message.setProto3StringField(this, 9, value);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.zonetype.ModelList.repeatedFields_ = [2];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.zonetype.ModelList.prototype.toObject = function(opt_includeInstance) {
  return proto.zonetype.ModelList.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.zonetype.ModelList} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.zonetype.ModelList.toObject = function(includeInstance, msg) {
  var f, obj = {
    centralStationCode: jspb.Message.getFieldWithDefault(msg, 1, ""),
    modelsList: jspb.Message.toObjectList(msg.getModelsList(),
    proto.zonetype.Model.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.zonetype.ModelList}
 */
proto.zonetype.ModelList.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.zonetype.ModelList;
  return proto.zonetype.ModelList.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.zonetype.ModelList} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.zonetype.ModelList}
 */
proto.zonetype.ModelList.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setCentralStationCode(value);
      break;
    case 2:
      var value = new proto.zonetype.Model;
      reader.readMessage(value,proto.zonetype.Model.deserializeBinaryFromReader);
      msg.addModels(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.zonetype.ModelList.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.zonetype.ModelList.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.zonetype.ModelList} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.zonetype.ModelList.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getCentralStationCode();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getModelsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      2,
      f,
      proto.zonetype.Model.serializeBinaryToWriter
    );
  }
};


/**
 * optional string central_station_code = 1;
 * @return {string}
 */
proto.zonetype.ModelList.prototype.getCentralStationCode = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.zonetype.ModelList} returns this
 */
proto.zonetype.ModelList.prototype.setCentralStationCode = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * repeated Model models = 2;
 * @return {!Array<!proto.zonetype.Model>}
 */
proto.zonetype.ModelList.prototype.getModelsList = function() {
  return /** @type{!Array<!proto.zonetype.Model>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.zonetype.Model, 2));
};


/**
 * @param {!Array<!proto.zonetype.Model>} value
 * @return {!proto.zonetype.ModelList} returns this
*/
proto.zonetype.ModelList.prototype.setModelsList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 2, value);
};


/**
 * @param {!proto.zonetype.Model=} opt_value
 * @param {number=} opt_index
 * @return {!proto.zonetype.Model}
 */
proto.zonetype.ModelList.prototype.addModels = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 2, opt_value, proto.zonetype.Model, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.zonetype.ModelList} returns this
 */
proto.zonetype.ModelList.prototype.clearModelsList = function() {
  return this.setModelsList([]);
};


goog.object.extend(exports, proto.zonetype);
