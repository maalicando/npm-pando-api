// source: pando/api/alarm/v0/clientsettings.proto
/**
 * @fileoverview
 * @enhanceable
 * @suppress {missingRequire} reports error on implicit type usages.
 * @suppress {messageConventions} JS Compiler reports an error if a variable or
 *     field starts with 'MSG_' and isn't a translatable message.
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!
/* eslint-disable */
// @ts-nocheck

var jspb = require('google-protobuf');
var goog = jspb;
var global = Function('return this')();

goog.exportSymbol('proto.client_settings.ClientEquipment', null, global);
goog.exportSymbol('proto.client_settings.ClientPanelType', null, global);
goog.exportSymbol('proto.client_settings.GetClientEquipmentResponse', null, global);
goog.exportSymbol('proto.client_settings.GetClientPanelTypeResponse', null, global);
goog.exportSymbol('proto.client_settings.GetClientSettingsRequest', null, global);
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.client_settings.GetClientSettingsRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.client_settings.GetClientSettingsRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.client_settings.GetClientSettingsRequest.displayName = 'proto.client_settings.GetClientSettingsRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.client_settings.GetClientEquipmentResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.client_settings.GetClientEquipmentResponse.repeatedFields_, null);
};
goog.inherits(proto.client_settings.GetClientEquipmentResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.client_settings.GetClientEquipmentResponse.displayName = 'proto.client_settings.GetClientEquipmentResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.client_settings.GetClientPanelTypeResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.client_settings.GetClientPanelTypeResponse.repeatedFields_, null);
};
goog.inherits(proto.client_settings.GetClientPanelTypeResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.client_settings.GetClientPanelTypeResponse.displayName = 'proto.client_settings.GetClientPanelTypeResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.client_settings.ClientEquipment = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.client_settings.ClientEquipment, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.client_settings.ClientEquipment.displayName = 'proto.client_settings.ClientEquipment';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.client_settings.ClientPanelType = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.client_settings.ClientPanelType, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.client_settings.ClientPanelType.displayName = 'proto.client_settings.ClientPanelType';
}



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.client_settings.GetClientSettingsRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.client_settings.GetClientSettingsRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.client_settings.GetClientSettingsRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.client_settings.GetClientSettingsRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    accessCode: jspb.Message.getFieldWithDefault(msg, 1, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.client_settings.GetClientSettingsRequest}
 */
proto.client_settings.GetClientSettingsRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.client_settings.GetClientSettingsRequest;
  return proto.client_settings.GetClientSettingsRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.client_settings.GetClientSettingsRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.client_settings.GetClientSettingsRequest}
 */
proto.client_settings.GetClientSettingsRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setAccessCode(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.client_settings.GetClientSettingsRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.client_settings.GetClientSettingsRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.client_settings.GetClientSettingsRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.client_settings.GetClientSettingsRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getAccessCode();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
};


/**
 * optional string access_code = 1;
 * @return {string}
 */
proto.client_settings.GetClientSettingsRequest.prototype.getAccessCode = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.client_settings.GetClientSettingsRequest} returns this
 */
proto.client_settings.GetClientSettingsRequest.prototype.setAccessCode = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.client_settings.GetClientEquipmentResponse.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.client_settings.GetClientEquipmentResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.client_settings.GetClientEquipmentResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.client_settings.GetClientEquipmentResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.client_settings.GetClientEquipmentResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    equipmentList: jspb.Message.toObjectList(msg.getEquipmentList(),
    proto.client_settings.ClientEquipment.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.client_settings.GetClientEquipmentResponse}
 */
proto.client_settings.GetClientEquipmentResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.client_settings.GetClientEquipmentResponse;
  return proto.client_settings.GetClientEquipmentResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.client_settings.GetClientEquipmentResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.client_settings.GetClientEquipmentResponse}
 */
proto.client_settings.GetClientEquipmentResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.client_settings.ClientEquipment;
      reader.readMessage(value,proto.client_settings.ClientEquipment.deserializeBinaryFromReader);
      msg.addEquipment(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.client_settings.GetClientEquipmentResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.client_settings.GetClientEquipmentResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.client_settings.GetClientEquipmentResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.client_settings.GetClientEquipmentResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getEquipmentList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      proto.client_settings.ClientEquipment.serializeBinaryToWriter
    );
  }
};


/**
 * repeated ClientEquipment equipment = 1;
 * @return {!Array<!proto.client_settings.ClientEquipment>}
 */
proto.client_settings.GetClientEquipmentResponse.prototype.getEquipmentList = function() {
  return /** @type{!Array<!proto.client_settings.ClientEquipment>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.client_settings.ClientEquipment, 1));
};


/**
 * @param {!Array<!proto.client_settings.ClientEquipment>} value
 * @return {!proto.client_settings.GetClientEquipmentResponse} returns this
*/
proto.client_settings.GetClientEquipmentResponse.prototype.setEquipmentList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.client_settings.ClientEquipment=} opt_value
 * @param {number=} opt_index
 * @return {!proto.client_settings.ClientEquipment}
 */
proto.client_settings.GetClientEquipmentResponse.prototype.addEquipment = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.client_settings.ClientEquipment, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.client_settings.GetClientEquipmentResponse} returns this
 */
proto.client_settings.GetClientEquipmentResponse.prototype.clearEquipmentList = function() {
  return this.setEquipmentList([]);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.client_settings.GetClientPanelTypeResponse.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.client_settings.GetClientPanelTypeResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.client_settings.GetClientPanelTypeResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.client_settings.GetClientPanelTypeResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.client_settings.GetClientPanelTypeResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    typesList: jspb.Message.toObjectList(msg.getTypesList(),
    proto.client_settings.ClientPanelType.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.client_settings.GetClientPanelTypeResponse}
 */
proto.client_settings.GetClientPanelTypeResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.client_settings.GetClientPanelTypeResponse;
  return proto.client_settings.GetClientPanelTypeResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.client_settings.GetClientPanelTypeResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.client_settings.GetClientPanelTypeResponse}
 */
proto.client_settings.GetClientPanelTypeResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.client_settings.ClientPanelType;
      reader.readMessage(value,proto.client_settings.ClientPanelType.deserializeBinaryFromReader);
      msg.addTypes(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.client_settings.GetClientPanelTypeResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.client_settings.GetClientPanelTypeResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.client_settings.GetClientPanelTypeResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.client_settings.GetClientPanelTypeResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getTypesList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      proto.client_settings.ClientPanelType.serializeBinaryToWriter
    );
  }
};


/**
 * repeated ClientPanelType types = 1;
 * @return {!Array<!proto.client_settings.ClientPanelType>}
 */
proto.client_settings.GetClientPanelTypeResponse.prototype.getTypesList = function() {
  return /** @type{!Array<!proto.client_settings.ClientPanelType>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.client_settings.ClientPanelType, 1));
};


/**
 * @param {!Array<!proto.client_settings.ClientPanelType>} value
 * @return {!proto.client_settings.GetClientPanelTypeResponse} returns this
*/
proto.client_settings.GetClientPanelTypeResponse.prototype.setTypesList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.client_settings.ClientPanelType=} opt_value
 * @param {number=} opt_index
 * @return {!proto.client_settings.ClientPanelType}
 */
proto.client_settings.GetClientPanelTypeResponse.prototype.addTypes = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.client_settings.ClientPanelType, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.client_settings.GetClientPanelTypeResponse} returns this
 */
proto.client_settings.GetClientPanelTypeResponse.prototype.clearTypesList = function() {
  return this.setTypesList([]);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.client_settings.ClientEquipment.prototype.toObject = function(opt_includeInstance) {
  return proto.client_settings.ClientEquipment.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.client_settings.ClientEquipment} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.client_settings.ClientEquipment.toObject = function(includeInstance, msg) {
  var f, obj = {
    accessCode: jspb.Message.getFieldWithDefault(msg, 1, ""),
    equipmentGuid: jspb.Message.getFieldWithDefault(msg, 2, ""),
    displayName: jspb.Message.getFieldWithDefault(msg, 3, ""),
    description: jspb.Message.getFieldWithDefault(msg, 4, ""),
    partNumber: jspb.Message.getFieldWithDefault(msg, 5, ""),
    cost: jspb.Message.getFieldWithDefault(msg, 6, ""),
    retailPrice: jspb.Message.getFieldWithDefault(msg, 7, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.client_settings.ClientEquipment}
 */
proto.client_settings.ClientEquipment.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.client_settings.ClientEquipment;
  return proto.client_settings.ClientEquipment.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.client_settings.ClientEquipment} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.client_settings.ClientEquipment}
 */
proto.client_settings.ClientEquipment.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setAccessCode(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setEquipmentGuid(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setDisplayName(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setDescription(value);
      break;
    case 5:
      var value = /** @type {string} */ (reader.readString());
      msg.setPartNumber(value);
      break;
    case 6:
      var value = /** @type {string} */ (reader.readString());
      msg.setCost(value);
      break;
    case 7:
      var value = /** @type {string} */ (reader.readString());
      msg.setRetailPrice(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.client_settings.ClientEquipment.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.client_settings.ClientEquipment.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.client_settings.ClientEquipment} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.client_settings.ClientEquipment.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getAccessCode();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getEquipmentGuid();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getDisplayName();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getDescription();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
  f = message.getPartNumber();
  if (f.length > 0) {
    writer.writeString(
      5,
      f
    );
  }
  f = message.getCost();
  if (f.length > 0) {
    writer.writeString(
      6,
      f
    );
  }
  f = message.getRetailPrice();
  if (f.length > 0) {
    writer.writeString(
      7,
      f
    );
  }
};


/**
 * optional string access_code = 1;
 * @return {string}
 */
proto.client_settings.ClientEquipment.prototype.getAccessCode = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.client_settings.ClientEquipment} returns this
 */
proto.client_settings.ClientEquipment.prototype.setAccessCode = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string equipment_guid = 2;
 * @return {string}
 */
proto.client_settings.ClientEquipment.prototype.getEquipmentGuid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.client_settings.ClientEquipment} returns this
 */
proto.client_settings.ClientEquipment.prototype.setEquipmentGuid = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string display_name = 3;
 * @return {string}
 */
proto.client_settings.ClientEquipment.prototype.getDisplayName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.client_settings.ClientEquipment} returns this
 */
proto.client_settings.ClientEquipment.prototype.setDisplayName = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional string description = 4;
 * @return {string}
 */
proto.client_settings.ClientEquipment.prototype.getDescription = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.client_settings.ClientEquipment} returns this
 */
proto.client_settings.ClientEquipment.prototype.setDescription = function(value) {
  return jspb.Message.setProto3StringField(this, 4, value);
};


/**
 * optional string part_number = 5;
 * @return {string}
 */
proto.client_settings.ClientEquipment.prototype.getPartNumber = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, ""));
};


/**
 * @param {string} value
 * @return {!proto.client_settings.ClientEquipment} returns this
 */
proto.client_settings.ClientEquipment.prototype.setPartNumber = function(value) {
  return jspb.Message.setProto3StringField(this, 5, value);
};


/**
 * optional string cost = 6;
 * @return {string}
 */
proto.client_settings.ClientEquipment.prototype.getCost = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 6, ""));
};


/**
 * @param {string} value
 * @return {!proto.client_settings.ClientEquipment} returns this
 */
proto.client_settings.ClientEquipment.prototype.setCost = function(value) {
  return jspb.Message.setProto3StringField(this, 6, value);
};


/**
 * optional string retail_price = 7;
 * @return {string}
 */
proto.client_settings.ClientEquipment.prototype.getRetailPrice = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 7, ""));
};


/**
 * @param {string} value
 * @return {!proto.client_settings.ClientEquipment} returns this
 */
proto.client_settings.ClientEquipment.prototype.setRetailPrice = function(value) {
  return jspb.Message.setProto3StringField(this, 7, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.client_settings.ClientPanelType.prototype.toObject = function(opt_includeInstance) {
  return proto.client_settings.ClientPanelType.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.client_settings.ClientPanelType} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.client_settings.ClientPanelType.toObject = function(includeInstance, msg) {
  var f, obj = {
    accessCode: jspb.Message.getFieldWithDefault(msg, 1, ""),
    panelCode: jspb.Message.getFieldWithDefault(msg, 2, ""),
    displayName: jspb.Message.getFieldWithDefault(msg, 3, ""),
    allowDiy: jspb.Message.getFieldWithDefault(msg, 4, ""),
    allowExisting: jspb.Message.getFieldWithDefault(msg, 5, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.client_settings.ClientPanelType}
 */
proto.client_settings.ClientPanelType.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.client_settings.ClientPanelType;
  return proto.client_settings.ClientPanelType.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.client_settings.ClientPanelType} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.client_settings.ClientPanelType}
 */
proto.client_settings.ClientPanelType.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setAccessCode(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setPanelCode(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setDisplayName(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setAllowDiy(value);
      break;
    case 5:
      var value = /** @type {string} */ (reader.readString());
      msg.setAllowExisting(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.client_settings.ClientPanelType.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.client_settings.ClientPanelType.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.client_settings.ClientPanelType} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.client_settings.ClientPanelType.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getAccessCode();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getPanelCode();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getDisplayName();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getAllowDiy();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
  f = message.getAllowExisting();
  if (f.length > 0) {
    writer.writeString(
      5,
      f
    );
  }
};


/**
 * optional string access_code = 1;
 * @return {string}
 */
proto.client_settings.ClientPanelType.prototype.getAccessCode = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.client_settings.ClientPanelType} returns this
 */
proto.client_settings.ClientPanelType.prototype.setAccessCode = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string panel_code = 2;
 * @return {string}
 */
proto.client_settings.ClientPanelType.prototype.getPanelCode = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.client_settings.ClientPanelType} returns this
 */
proto.client_settings.ClientPanelType.prototype.setPanelCode = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string display_name = 3;
 * @return {string}
 */
proto.client_settings.ClientPanelType.prototype.getDisplayName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.client_settings.ClientPanelType} returns this
 */
proto.client_settings.ClientPanelType.prototype.setDisplayName = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional string allow_diy = 4;
 * @return {string}
 */
proto.client_settings.ClientPanelType.prototype.getAllowDiy = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.client_settings.ClientPanelType} returns this
 */
proto.client_settings.ClientPanelType.prototype.setAllowDiy = function(value) {
  return jspb.Message.setProto3StringField(this, 4, value);
};


/**
 * optional string allow_existing = 5;
 * @return {string}
 */
proto.client_settings.ClientPanelType.prototype.getAllowExisting = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, ""));
};


/**
 * @param {string} value
 * @return {!proto.client_settings.ClientPanelType} returns this
 */
proto.client_settings.ClientPanelType.prototype.setAllowExisting = function(value) {
  return jspb.Message.setProto3StringField(this, 5, value);
};


goog.object.extend(exports, proto.client_settings);
