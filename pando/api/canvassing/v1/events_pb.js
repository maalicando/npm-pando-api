// source: pando/api/canvassing/v1/events.proto
/**
 * @fileoverview
 * @enhanceable
 * @suppress {missingRequire} reports error on implicit type usages.
 * @suppress {messageConventions} JS Compiler reports an error if a variable or
 *     field starts with 'MSG_' and isn't a translatable message.
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!
/* eslint-disable */
// @ts-nocheck

var jspb = require('google-protobuf');
var goog = jspb;
var global = Function('return this')();

var pando_api_shared_pb = require('../../../../pando/api/shared_pb.js');
goog.object.extend(proto, pando_api_shared_pb);
var google_protobuf_timestamp_pb = require('google-protobuf/google/protobuf/timestamp_pb.js');
goog.object.extend(proto, google_protobuf_timestamp_pb);
goog.exportSymbol('proto.pando.api.canvassing.v1.events.AreaAssignmentChange', null, global);
goog.exportSymbol('proto.pando.api.canvassing.v1.events.AreaModified', null, global);
goog.exportSymbol('proto.pando.api.canvassing.v1.events.EventArea', null, global);
goog.exportSymbol('proto.pando.api.canvassing.v1.events.EventLead', null, global);
goog.exportSymbol('proto.pando.api.canvassing.v1.events.EventLeadType', null, global);
goog.exportSymbol('proto.pando.api.canvassing.v1.events.EventNote', null, global);
goog.exportSymbol('proto.pando.api.canvassing.v1.events.Events', null, global);
goog.exportSymbol('proto.pando.api.canvassing.v1.events.LeadModified', null, global);
goog.exportSymbol('proto.pando.api.canvassing.v1.events.LeadTypeModified', null, global);
goog.exportSymbol('proto.pando.api.canvassing.v1.events.NoteModified', null, global);
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.pando.api.canvassing.v1.events.EventArea = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.pando.api.canvassing.v1.events.EventArea, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.pando.api.canvassing.v1.events.EventArea.displayName = 'proto.pando.api.canvassing.v1.events.EventArea';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.pando.api.canvassing.v1.events.EventLead = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.pando.api.canvassing.v1.events.EventLead, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.pando.api.canvassing.v1.events.EventLead.displayName = 'proto.pando.api.canvassing.v1.events.EventLead';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.pando.api.canvassing.v1.events.EventLeadType = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.pando.api.canvassing.v1.events.EventLeadType, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.pando.api.canvassing.v1.events.EventLeadType.displayName = 'proto.pando.api.canvassing.v1.events.EventLeadType';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.pando.api.canvassing.v1.events.EventNote = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.pando.api.canvassing.v1.events.EventNote, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.pando.api.canvassing.v1.events.EventNote.displayName = 'proto.pando.api.canvassing.v1.events.EventNote';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.pando.api.canvassing.v1.events.NoteModified = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, 500, null, null);
};
goog.inherits(proto.pando.api.canvassing.v1.events.NoteModified, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.pando.api.canvassing.v1.events.NoteModified.displayName = 'proto.pando.api.canvassing.v1.events.NoteModified';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.pando.api.canvassing.v1.events.AreaModified = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, 500, null, null);
};
goog.inherits(proto.pando.api.canvassing.v1.events.AreaModified, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.pando.api.canvassing.v1.events.AreaModified.displayName = 'proto.pando.api.canvassing.v1.events.AreaModified';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.pando.api.canvassing.v1.events.AreaAssignmentChange = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, 500, null, null);
};
goog.inherits(proto.pando.api.canvassing.v1.events.AreaAssignmentChange, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.pando.api.canvassing.v1.events.AreaAssignmentChange.displayName = 'proto.pando.api.canvassing.v1.events.AreaAssignmentChange';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.pando.api.canvassing.v1.events.LeadModified = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, 500, null, null);
};
goog.inherits(proto.pando.api.canvassing.v1.events.LeadModified, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.pando.api.canvassing.v1.events.LeadModified.displayName = 'proto.pando.api.canvassing.v1.events.LeadModified';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.pando.api.canvassing.v1.events.LeadTypeModified = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, 500, null, null);
};
goog.inherits(proto.pando.api.canvassing.v1.events.LeadTypeModified, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.pando.api.canvassing.v1.events.LeadTypeModified.displayName = 'proto.pando.api.canvassing.v1.events.LeadTypeModified';
}



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.pando.api.canvassing.v1.events.EventArea.prototype.toObject = function(opt_includeInstance) {
  return proto.pando.api.canvassing.v1.events.EventArea.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.pando.api.canvassing.v1.events.EventArea} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.pando.api.canvassing.v1.events.EventArea.toObject = function(includeInstance, msg) {
  var f, obj = {
    id: jspb.Message.getFieldWithDefault(msg, 1, 0),
    name: jspb.Message.getFieldWithDefault(msg, 2, ""),
    color: jspb.Message.getFieldWithDefault(msg, 3, ""),
    dateStart: (f = msg.getDateStart()) && google_protobuf_timestamp_pb.Timestamp.toObject(includeInstance, f),
    dateEnd: (f = msg.getDateEnd()) && google_protobuf_timestamp_pb.Timestamp.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.pando.api.canvassing.v1.events.EventArea}
 */
proto.pando.api.canvassing.v1.events.EventArea.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.pando.api.canvassing.v1.events.EventArea;
  return proto.pando.api.canvassing.v1.events.EventArea.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.pando.api.canvassing.v1.events.EventArea} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.pando.api.canvassing.v1.events.EventArea}
 */
proto.pando.api.canvassing.v1.events.EventArea.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setId(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setName(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setColor(value);
      break;
    case 4:
      var value = new google_protobuf_timestamp_pb.Timestamp;
      reader.readMessage(value,google_protobuf_timestamp_pb.Timestamp.deserializeBinaryFromReader);
      msg.setDateStart(value);
      break;
    case 5:
      var value = new google_protobuf_timestamp_pb.Timestamp;
      reader.readMessage(value,google_protobuf_timestamp_pb.Timestamp.deserializeBinaryFromReader);
      msg.setDateEnd(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.pando.api.canvassing.v1.events.EventArea.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.pando.api.canvassing.v1.events.EventArea.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.pando.api.canvassing.v1.events.EventArea} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.pando.api.canvassing.v1.events.EventArea.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getId();
  if (f !== 0) {
    writer.writeInt32(
      1,
      f
    );
  }
  f = message.getName();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getColor();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getDateStart();
  if (f != null) {
    writer.writeMessage(
      4,
      f,
      google_protobuf_timestamp_pb.Timestamp.serializeBinaryToWriter
    );
  }
  f = message.getDateEnd();
  if (f != null) {
    writer.writeMessage(
      5,
      f,
      google_protobuf_timestamp_pb.Timestamp.serializeBinaryToWriter
    );
  }
};


/**
 * optional int32 id = 1;
 * @return {number}
 */
proto.pando.api.canvassing.v1.events.EventArea.prototype.getId = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.pando.api.canvassing.v1.events.EventArea} returns this
 */
proto.pando.api.canvassing.v1.events.EventArea.prototype.setId = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional string name = 2;
 * @return {string}
 */
proto.pando.api.canvassing.v1.events.EventArea.prototype.getName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.pando.api.canvassing.v1.events.EventArea} returns this
 */
proto.pando.api.canvassing.v1.events.EventArea.prototype.setName = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string color = 3;
 * @return {string}
 */
proto.pando.api.canvassing.v1.events.EventArea.prototype.getColor = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.pando.api.canvassing.v1.events.EventArea} returns this
 */
proto.pando.api.canvassing.v1.events.EventArea.prototype.setColor = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional google.protobuf.Timestamp date_start = 4;
 * @return {?proto.google.protobuf.Timestamp}
 */
proto.pando.api.canvassing.v1.events.EventArea.prototype.getDateStart = function() {
  return /** @type{?proto.google.protobuf.Timestamp} */ (
    jspb.Message.getWrapperField(this, google_protobuf_timestamp_pb.Timestamp, 4));
};


/**
 * @param {?proto.google.protobuf.Timestamp|undefined} value
 * @return {!proto.pando.api.canvassing.v1.events.EventArea} returns this
*/
proto.pando.api.canvassing.v1.events.EventArea.prototype.setDateStart = function(value) {
  return jspb.Message.setWrapperField(this, 4, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.pando.api.canvassing.v1.events.EventArea} returns this
 */
proto.pando.api.canvassing.v1.events.EventArea.prototype.clearDateStart = function() {
  return this.setDateStart(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.pando.api.canvassing.v1.events.EventArea.prototype.hasDateStart = function() {
  return jspb.Message.getField(this, 4) != null;
};


/**
 * optional google.protobuf.Timestamp date_end = 5;
 * @return {?proto.google.protobuf.Timestamp}
 */
proto.pando.api.canvassing.v1.events.EventArea.prototype.getDateEnd = function() {
  return /** @type{?proto.google.protobuf.Timestamp} */ (
    jspb.Message.getWrapperField(this, google_protobuf_timestamp_pb.Timestamp, 5));
};


/**
 * @param {?proto.google.protobuf.Timestamp|undefined} value
 * @return {!proto.pando.api.canvassing.v1.events.EventArea} returns this
*/
proto.pando.api.canvassing.v1.events.EventArea.prototype.setDateEnd = function(value) {
  return jspb.Message.setWrapperField(this, 5, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.pando.api.canvassing.v1.events.EventArea} returns this
 */
proto.pando.api.canvassing.v1.events.EventArea.prototype.clearDateEnd = function() {
  return this.setDateEnd(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.pando.api.canvassing.v1.events.EventArea.prototype.hasDateEnd = function() {
  return jspb.Message.getField(this, 5) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.pando.api.canvassing.v1.events.EventLead.prototype.toObject = function(opt_includeInstance) {
  return proto.pando.api.canvassing.v1.events.EventLead.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.pando.api.canvassing.v1.events.EventLead} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.pando.api.canvassing.v1.events.EventLead.toObject = function(includeInstance, msg) {
  var f, obj = {
    id: jspb.Message.getFieldWithDefault(msg, 1, 0),
    leadTypeId: jspb.Message.getFieldWithDefault(msg, 2, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.pando.api.canvassing.v1.events.EventLead}
 */
proto.pando.api.canvassing.v1.events.EventLead.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.pando.api.canvassing.v1.events.EventLead;
  return proto.pando.api.canvassing.v1.events.EventLead.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.pando.api.canvassing.v1.events.EventLead} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.pando.api.canvassing.v1.events.EventLead}
 */
proto.pando.api.canvassing.v1.events.EventLead.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setId(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setLeadTypeId(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.pando.api.canvassing.v1.events.EventLead.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.pando.api.canvassing.v1.events.EventLead.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.pando.api.canvassing.v1.events.EventLead} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.pando.api.canvassing.v1.events.EventLead.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getId();
  if (f !== 0) {
    writer.writeInt32(
      1,
      f
    );
  }
  f = message.getLeadTypeId();
  if (f !== 0) {
    writer.writeInt32(
      2,
      f
    );
  }
};


/**
 * optional int32 id = 1;
 * @return {number}
 */
proto.pando.api.canvassing.v1.events.EventLead.prototype.getId = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.pando.api.canvassing.v1.events.EventLead} returns this
 */
proto.pando.api.canvassing.v1.events.EventLead.prototype.setId = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional int32 lead_type_id = 2;
 * @return {number}
 */
proto.pando.api.canvassing.v1.events.EventLead.prototype.getLeadTypeId = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.pando.api.canvassing.v1.events.EventLead} returns this
 */
proto.pando.api.canvassing.v1.events.EventLead.prototype.setLeadTypeId = function(value) {
  return jspb.Message.setProto3IntField(this, 2, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.pando.api.canvassing.v1.events.EventLeadType.prototype.toObject = function(opt_includeInstance) {
  return proto.pando.api.canvassing.v1.events.EventLeadType.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.pando.api.canvassing.v1.events.EventLeadType} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.pando.api.canvassing.v1.events.EventLeadType.toObject = function(includeInstance, msg) {
  var f, obj = {
    id: jspb.Message.getFieldWithDefault(msg, 1, 0),
    name: jspb.Message.getFieldWithDefault(msg, 2, ""),
    description: jspb.Message.getFieldWithDefault(msg, 3, ""),
    iconColor: jspb.Message.getFieldWithDefault(msg, 4, ""),
    label: jspb.Message.getFieldWithDefault(msg, 5, ""),
    labelColor: jspb.Message.getFieldWithDefault(msg, 6, ""),
    isAssignable: jspb.Message.getBooleanFieldWithDefault(msg, 7, false),
    isDisplayed: jspb.Message.getBooleanFieldWithDefault(msg, 8, false)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.pando.api.canvassing.v1.events.EventLeadType}
 */
proto.pando.api.canvassing.v1.events.EventLeadType.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.pando.api.canvassing.v1.events.EventLeadType;
  return proto.pando.api.canvassing.v1.events.EventLeadType.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.pando.api.canvassing.v1.events.EventLeadType} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.pando.api.canvassing.v1.events.EventLeadType}
 */
proto.pando.api.canvassing.v1.events.EventLeadType.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setId(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setName(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setDescription(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setIconColor(value);
      break;
    case 5:
      var value = /** @type {string} */ (reader.readString());
      msg.setLabel(value);
      break;
    case 6:
      var value = /** @type {string} */ (reader.readString());
      msg.setLabelColor(value);
      break;
    case 7:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setIsAssignable(value);
      break;
    case 8:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setIsDisplayed(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.pando.api.canvassing.v1.events.EventLeadType.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.pando.api.canvassing.v1.events.EventLeadType.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.pando.api.canvassing.v1.events.EventLeadType} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.pando.api.canvassing.v1.events.EventLeadType.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getId();
  if (f !== 0) {
    writer.writeInt32(
      1,
      f
    );
  }
  f = message.getName();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getDescription();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getIconColor();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
  f = message.getLabel();
  if (f.length > 0) {
    writer.writeString(
      5,
      f
    );
  }
  f = message.getLabelColor();
  if (f.length > 0) {
    writer.writeString(
      6,
      f
    );
  }
  f = message.getIsAssignable();
  if (f) {
    writer.writeBool(
      7,
      f
    );
  }
  f = message.getIsDisplayed();
  if (f) {
    writer.writeBool(
      8,
      f
    );
  }
};


/**
 * optional int32 id = 1;
 * @return {number}
 */
proto.pando.api.canvassing.v1.events.EventLeadType.prototype.getId = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.pando.api.canvassing.v1.events.EventLeadType} returns this
 */
proto.pando.api.canvassing.v1.events.EventLeadType.prototype.setId = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional string name = 2;
 * @return {string}
 */
proto.pando.api.canvassing.v1.events.EventLeadType.prototype.getName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.pando.api.canvassing.v1.events.EventLeadType} returns this
 */
proto.pando.api.canvassing.v1.events.EventLeadType.prototype.setName = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string description = 3;
 * @return {string}
 */
proto.pando.api.canvassing.v1.events.EventLeadType.prototype.getDescription = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.pando.api.canvassing.v1.events.EventLeadType} returns this
 */
proto.pando.api.canvassing.v1.events.EventLeadType.prototype.setDescription = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional string icon_color = 4;
 * @return {string}
 */
proto.pando.api.canvassing.v1.events.EventLeadType.prototype.getIconColor = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.pando.api.canvassing.v1.events.EventLeadType} returns this
 */
proto.pando.api.canvassing.v1.events.EventLeadType.prototype.setIconColor = function(value) {
  return jspb.Message.setProto3StringField(this, 4, value);
};


/**
 * optional string label = 5;
 * @return {string}
 */
proto.pando.api.canvassing.v1.events.EventLeadType.prototype.getLabel = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, ""));
};


/**
 * @param {string} value
 * @return {!proto.pando.api.canvassing.v1.events.EventLeadType} returns this
 */
proto.pando.api.canvassing.v1.events.EventLeadType.prototype.setLabel = function(value) {
  return jspb.Message.setProto3StringField(this, 5, value);
};


/**
 * optional string label_color = 6;
 * @return {string}
 */
proto.pando.api.canvassing.v1.events.EventLeadType.prototype.getLabelColor = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 6, ""));
};


/**
 * @param {string} value
 * @return {!proto.pando.api.canvassing.v1.events.EventLeadType} returns this
 */
proto.pando.api.canvassing.v1.events.EventLeadType.prototype.setLabelColor = function(value) {
  return jspb.Message.setProto3StringField(this, 6, value);
};


/**
 * optional bool is_assignable = 7;
 * @return {boolean}
 */
proto.pando.api.canvassing.v1.events.EventLeadType.prototype.getIsAssignable = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 7, false));
};


/**
 * @param {boolean} value
 * @return {!proto.pando.api.canvassing.v1.events.EventLeadType} returns this
 */
proto.pando.api.canvassing.v1.events.EventLeadType.prototype.setIsAssignable = function(value) {
  return jspb.Message.setProto3BooleanField(this, 7, value);
};


/**
 * optional bool is_displayed = 8;
 * @return {boolean}
 */
proto.pando.api.canvassing.v1.events.EventLeadType.prototype.getIsDisplayed = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 8, false));
};


/**
 * @param {boolean} value
 * @return {!proto.pando.api.canvassing.v1.events.EventLeadType} returns this
 */
proto.pando.api.canvassing.v1.events.EventLeadType.prototype.setIsDisplayed = function(value) {
  return jspb.Message.setProto3BooleanField(this, 8, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.pando.api.canvassing.v1.events.EventNote.prototype.toObject = function(opt_includeInstance) {
  return proto.pando.api.canvassing.v1.events.EventNote.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.pando.api.canvassing.v1.events.EventNote} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.pando.api.canvassing.v1.events.EventNote.toObject = function(includeInstance, msg) {
  var f, obj = {
    id: jspb.Message.getFieldWithDefault(msg, 1, 0),
    text: jspb.Message.getFieldWithDefault(msg, 2, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.pando.api.canvassing.v1.events.EventNote}
 */
proto.pando.api.canvassing.v1.events.EventNote.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.pando.api.canvassing.v1.events.EventNote;
  return proto.pando.api.canvassing.v1.events.EventNote.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.pando.api.canvassing.v1.events.EventNote} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.pando.api.canvassing.v1.events.EventNote}
 */
proto.pando.api.canvassing.v1.events.EventNote.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setId(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setText(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.pando.api.canvassing.v1.events.EventNote.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.pando.api.canvassing.v1.events.EventNote.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.pando.api.canvassing.v1.events.EventNote} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.pando.api.canvassing.v1.events.EventNote.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getId();
  if (f !== 0) {
    writer.writeInt32(
      1,
      f
    );
  }
  f = message.getText();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
};


/**
 * optional int32 id = 1;
 * @return {number}
 */
proto.pando.api.canvassing.v1.events.EventNote.prototype.getId = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.pando.api.canvassing.v1.events.EventNote} returns this
 */
proto.pando.api.canvassing.v1.events.EventNote.prototype.setId = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional string text = 2;
 * @return {string}
 */
proto.pando.api.canvassing.v1.events.EventNote.prototype.getText = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.pando.api.canvassing.v1.events.EventNote} returns this
 */
proto.pando.api.canvassing.v1.events.EventNote.prototype.setText = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.pando.api.canvassing.v1.events.NoteModified.prototype.toObject = function(opt_includeInstance) {
  return proto.pando.api.canvassing.v1.events.NoteModified.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.pando.api.canvassing.v1.events.NoteModified} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.pando.api.canvassing.v1.events.NoteModified.toObject = function(includeInstance, msg) {
  var f, obj = {
    note: (f = msg.getNote()) && proto.pando.api.canvassing.v1.events.EventNote.toObject(includeInstance, f),
    userData: (f = msg.getUserData()) && pando_api_shared_pb.UserMetadata.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.pando.api.canvassing.v1.events.NoteModified}
 */
proto.pando.api.canvassing.v1.events.NoteModified.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.pando.api.canvassing.v1.events.NoteModified;
  return proto.pando.api.canvassing.v1.events.NoteModified.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.pando.api.canvassing.v1.events.NoteModified} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.pando.api.canvassing.v1.events.NoteModified}
 */
proto.pando.api.canvassing.v1.events.NoteModified.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.pando.api.canvassing.v1.events.EventNote;
      reader.readMessage(value,proto.pando.api.canvassing.v1.events.EventNote.deserializeBinaryFromReader);
      msg.setNote(value);
      break;
    case 1000:
      var value = new pando_api_shared_pb.UserMetadata;
      reader.readMessage(value,pando_api_shared_pb.UserMetadata.deserializeBinaryFromReader);
      msg.setUserData(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.pando.api.canvassing.v1.events.NoteModified.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.pando.api.canvassing.v1.events.NoteModified.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.pando.api.canvassing.v1.events.NoteModified} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.pando.api.canvassing.v1.events.NoteModified.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getNote();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.pando.api.canvassing.v1.events.EventNote.serializeBinaryToWriter
    );
  }
  f = message.getUserData();
  if (f != null) {
    writer.writeMessage(
      1000,
      f,
      pando_api_shared_pb.UserMetadata.serializeBinaryToWriter
    );
  }
};


/**
 * optional EventNote note = 1;
 * @return {?proto.pando.api.canvassing.v1.events.EventNote}
 */
proto.pando.api.canvassing.v1.events.NoteModified.prototype.getNote = function() {
  return /** @type{?proto.pando.api.canvassing.v1.events.EventNote} */ (
    jspb.Message.getWrapperField(this, proto.pando.api.canvassing.v1.events.EventNote, 1));
};


/**
 * @param {?proto.pando.api.canvassing.v1.events.EventNote|undefined} value
 * @return {!proto.pando.api.canvassing.v1.events.NoteModified} returns this
*/
proto.pando.api.canvassing.v1.events.NoteModified.prototype.setNote = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.pando.api.canvassing.v1.events.NoteModified} returns this
 */
proto.pando.api.canvassing.v1.events.NoteModified.prototype.clearNote = function() {
  return this.setNote(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.pando.api.canvassing.v1.events.NoteModified.prototype.hasNote = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional pando.api.UserMetadata user_data = 1000;
 * @return {?proto.pando.api.UserMetadata}
 */
proto.pando.api.canvassing.v1.events.NoteModified.prototype.getUserData = function() {
  return /** @type{?proto.pando.api.UserMetadata} */ (
    jspb.Message.getWrapperField(this, pando_api_shared_pb.UserMetadata, 1000));
};


/**
 * @param {?proto.pando.api.UserMetadata|undefined} value
 * @return {!proto.pando.api.canvassing.v1.events.NoteModified} returns this
*/
proto.pando.api.canvassing.v1.events.NoteModified.prototype.setUserData = function(value) {
  return jspb.Message.setWrapperField(this, 1000, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.pando.api.canvassing.v1.events.NoteModified} returns this
 */
proto.pando.api.canvassing.v1.events.NoteModified.prototype.clearUserData = function() {
  return this.setUserData(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.pando.api.canvassing.v1.events.NoteModified.prototype.hasUserData = function() {
  return jspb.Message.getField(this, 1000) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.pando.api.canvassing.v1.events.AreaModified.prototype.toObject = function(opt_includeInstance) {
  return proto.pando.api.canvassing.v1.events.AreaModified.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.pando.api.canvassing.v1.events.AreaModified} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.pando.api.canvassing.v1.events.AreaModified.toObject = function(includeInstance, msg) {
  var f, obj = {
    area: (f = msg.getArea()) && proto.pando.api.canvassing.v1.events.EventArea.toObject(includeInstance, f),
    userData: (f = msg.getUserData()) && pando_api_shared_pb.UserMetadata.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.pando.api.canvassing.v1.events.AreaModified}
 */
proto.pando.api.canvassing.v1.events.AreaModified.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.pando.api.canvassing.v1.events.AreaModified;
  return proto.pando.api.canvassing.v1.events.AreaModified.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.pando.api.canvassing.v1.events.AreaModified} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.pando.api.canvassing.v1.events.AreaModified}
 */
proto.pando.api.canvassing.v1.events.AreaModified.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.pando.api.canvassing.v1.events.EventArea;
      reader.readMessage(value,proto.pando.api.canvassing.v1.events.EventArea.deserializeBinaryFromReader);
      msg.setArea(value);
      break;
    case 1000:
      var value = new pando_api_shared_pb.UserMetadata;
      reader.readMessage(value,pando_api_shared_pb.UserMetadata.deserializeBinaryFromReader);
      msg.setUserData(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.pando.api.canvassing.v1.events.AreaModified.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.pando.api.canvassing.v1.events.AreaModified.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.pando.api.canvassing.v1.events.AreaModified} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.pando.api.canvassing.v1.events.AreaModified.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getArea();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.pando.api.canvassing.v1.events.EventArea.serializeBinaryToWriter
    );
  }
  f = message.getUserData();
  if (f != null) {
    writer.writeMessage(
      1000,
      f,
      pando_api_shared_pb.UserMetadata.serializeBinaryToWriter
    );
  }
};


/**
 * optional EventArea area = 1;
 * @return {?proto.pando.api.canvassing.v1.events.EventArea}
 */
proto.pando.api.canvassing.v1.events.AreaModified.prototype.getArea = function() {
  return /** @type{?proto.pando.api.canvassing.v1.events.EventArea} */ (
    jspb.Message.getWrapperField(this, proto.pando.api.canvassing.v1.events.EventArea, 1));
};


/**
 * @param {?proto.pando.api.canvassing.v1.events.EventArea|undefined} value
 * @return {!proto.pando.api.canvassing.v1.events.AreaModified} returns this
*/
proto.pando.api.canvassing.v1.events.AreaModified.prototype.setArea = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.pando.api.canvassing.v1.events.AreaModified} returns this
 */
proto.pando.api.canvassing.v1.events.AreaModified.prototype.clearArea = function() {
  return this.setArea(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.pando.api.canvassing.v1.events.AreaModified.prototype.hasArea = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional pando.api.UserMetadata user_data = 1000;
 * @return {?proto.pando.api.UserMetadata}
 */
proto.pando.api.canvassing.v1.events.AreaModified.prototype.getUserData = function() {
  return /** @type{?proto.pando.api.UserMetadata} */ (
    jspb.Message.getWrapperField(this, pando_api_shared_pb.UserMetadata, 1000));
};


/**
 * @param {?proto.pando.api.UserMetadata|undefined} value
 * @return {!proto.pando.api.canvassing.v1.events.AreaModified} returns this
*/
proto.pando.api.canvassing.v1.events.AreaModified.prototype.setUserData = function(value) {
  return jspb.Message.setWrapperField(this, 1000, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.pando.api.canvassing.v1.events.AreaModified} returns this
 */
proto.pando.api.canvassing.v1.events.AreaModified.prototype.clearUserData = function() {
  return this.setUserData(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.pando.api.canvassing.v1.events.AreaModified.prototype.hasUserData = function() {
  return jspb.Message.getField(this, 1000) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.pando.api.canvassing.v1.events.AreaAssignmentChange.prototype.toObject = function(opt_includeInstance) {
  return proto.pando.api.canvassing.v1.events.AreaAssignmentChange.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.pando.api.canvassing.v1.events.AreaAssignmentChange} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.pando.api.canvassing.v1.events.AreaAssignmentChange.toObject = function(includeInstance, msg) {
  var f, obj = {
    areaId: jspb.Message.getFieldWithDefault(msg, 1, 0),
    changedAssigneeUserId: jspb.Message.getFieldWithDefault(msg, 2, ""),
    userData: (f = msg.getUserData()) && pando_api_shared_pb.UserMetadata.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.pando.api.canvassing.v1.events.AreaAssignmentChange}
 */
proto.pando.api.canvassing.v1.events.AreaAssignmentChange.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.pando.api.canvassing.v1.events.AreaAssignmentChange;
  return proto.pando.api.canvassing.v1.events.AreaAssignmentChange.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.pando.api.canvassing.v1.events.AreaAssignmentChange} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.pando.api.canvassing.v1.events.AreaAssignmentChange}
 */
proto.pando.api.canvassing.v1.events.AreaAssignmentChange.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setAreaId(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setChangedAssigneeUserId(value);
      break;
    case 1000:
      var value = new pando_api_shared_pb.UserMetadata;
      reader.readMessage(value,pando_api_shared_pb.UserMetadata.deserializeBinaryFromReader);
      msg.setUserData(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.pando.api.canvassing.v1.events.AreaAssignmentChange.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.pando.api.canvassing.v1.events.AreaAssignmentChange.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.pando.api.canvassing.v1.events.AreaAssignmentChange} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.pando.api.canvassing.v1.events.AreaAssignmentChange.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getAreaId();
  if (f !== 0) {
    writer.writeInt32(
      1,
      f
    );
  }
  f = message.getChangedAssigneeUserId();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getUserData();
  if (f != null) {
    writer.writeMessage(
      1000,
      f,
      pando_api_shared_pb.UserMetadata.serializeBinaryToWriter
    );
  }
};


/**
 * optional int32 area_id = 1;
 * @return {number}
 */
proto.pando.api.canvassing.v1.events.AreaAssignmentChange.prototype.getAreaId = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.pando.api.canvassing.v1.events.AreaAssignmentChange} returns this
 */
proto.pando.api.canvassing.v1.events.AreaAssignmentChange.prototype.setAreaId = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional string changed_assignee_user_id = 2;
 * @return {string}
 */
proto.pando.api.canvassing.v1.events.AreaAssignmentChange.prototype.getChangedAssigneeUserId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.pando.api.canvassing.v1.events.AreaAssignmentChange} returns this
 */
proto.pando.api.canvassing.v1.events.AreaAssignmentChange.prototype.setChangedAssigneeUserId = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional pando.api.UserMetadata user_data = 1000;
 * @return {?proto.pando.api.UserMetadata}
 */
proto.pando.api.canvassing.v1.events.AreaAssignmentChange.prototype.getUserData = function() {
  return /** @type{?proto.pando.api.UserMetadata} */ (
    jspb.Message.getWrapperField(this, pando_api_shared_pb.UserMetadata, 1000));
};


/**
 * @param {?proto.pando.api.UserMetadata|undefined} value
 * @return {!proto.pando.api.canvassing.v1.events.AreaAssignmentChange} returns this
*/
proto.pando.api.canvassing.v1.events.AreaAssignmentChange.prototype.setUserData = function(value) {
  return jspb.Message.setWrapperField(this, 1000, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.pando.api.canvassing.v1.events.AreaAssignmentChange} returns this
 */
proto.pando.api.canvassing.v1.events.AreaAssignmentChange.prototype.clearUserData = function() {
  return this.setUserData(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.pando.api.canvassing.v1.events.AreaAssignmentChange.prototype.hasUserData = function() {
  return jspb.Message.getField(this, 1000) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.pando.api.canvassing.v1.events.LeadModified.prototype.toObject = function(opt_includeInstance) {
  return proto.pando.api.canvassing.v1.events.LeadModified.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.pando.api.canvassing.v1.events.LeadModified} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.pando.api.canvassing.v1.events.LeadModified.toObject = function(includeInstance, msg) {
  var f, obj = {
    lead: (f = msg.getLead()) && proto.pando.api.canvassing.v1.events.EventLead.toObject(includeInstance, f),
    userData: (f = msg.getUserData()) && pando_api_shared_pb.UserMetadata.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.pando.api.canvassing.v1.events.LeadModified}
 */
proto.pando.api.canvassing.v1.events.LeadModified.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.pando.api.canvassing.v1.events.LeadModified;
  return proto.pando.api.canvassing.v1.events.LeadModified.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.pando.api.canvassing.v1.events.LeadModified} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.pando.api.canvassing.v1.events.LeadModified}
 */
proto.pando.api.canvassing.v1.events.LeadModified.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.pando.api.canvassing.v1.events.EventLead;
      reader.readMessage(value,proto.pando.api.canvassing.v1.events.EventLead.deserializeBinaryFromReader);
      msg.setLead(value);
      break;
    case 1000:
      var value = new pando_api_shared_pb.UserMetadata;
      reader.readMessage(value,pando_api_shared_pb.UserMetadata.deserializeBinaryFromReader);
      msg.setUserData(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.pando.api.canvassing.v1.events.LeadModified.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.pando.api.canvassing.v1.events.LeadModified.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.pando.api.canvassing.v1.events.LeadModified} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.pando.api.canvassing.v1.events.LeadModified.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getLead();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.pando.api.canvassing.v1.events.EventLead.serializeBinaryToWriter
    );
  }
  f = message.getUserData();
  if (f != null) {
    writer.writeMessage(
      1000,
      f,
      pando_api_shared_pb.UserMetadata.serializeBinaryToWriter
    );
  }
};


/**
 * optional EventLead lead = 1;
 * @return {?proto.pando.api.canvassing.v1.events.EventLead}
 */
proto.pando.api.canvassing.v1.events.LeadModified.prototype.getLead = function() {
  return /** @type{?proto.pando.api.canvassing.v1.events.EventLead} */ (
    jspb.Message.getWrapperField(this, proto.pando.api.canvassing.v1.events.EventLead, 1));
};


/**
 * @param {?proto.pando.api.canvassing.v1.events.EventLead|undefined} value
 * @return {!proto.pando.api.canvassing.v1.events.LeadModified} returns this
*/
proto.pando.api.canvassing.v1.events.LeadModified.prototype.setLead = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.pando.api.canvassing.v1.events.LeadModified} returns this
 */
proto.pando.api.canvassing.v1.events.LeadModified.prototype.clearLead = function() {
  return this.setLead(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.pando.api.canvassing.v1.events.LeadModified.prototype.hasLead = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional pando.api.UserMetadata user_data = 1000;
 * @return {?proto.pando.api.UserMetadata}
 */
proto.pando.api.canvassing.v1.events.LeadModified.prototype.getUserData = function() {
  return /** @type{?proto.pando.api.UserMetadata} */ (
    jspb.Message.getWrapperField(this, pando_api_shared_pb.UserMetadata, 1000));
};


/**
 * @param {?proto.pando.api.UserMetadata|undefined} value
 * @return {!proto.pando.api.canvassing.v1.events.LeadModified} returns this
*/
proto.pando.api.canvassing.v1.events.LeadModified.prototype.setUserData = function(value) {
  return jspb.Message.setWrapperField(this, 1000, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.pando.api.canvassing.v1.events.LeadModified} returns this
 */
proto.pando.api.canvassing.v1.events.LeadModified.prototype.clearUserData = function() {
  return this.setUserData(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.pando.api.canvassing.v1.events.LeadModified.prototype.hasUserData = function() {
  return jspb.Message.getField(this, 1000) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.pando.api.canvassing.v1.events.LeadTypeModified.prototype.toObject = function(opt_includeInstance) {
  return proto.pando.api.canvassing.v1.events.LeadTypeModified.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.pando.api.canvassing.v1.events.LeadTypeModified} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.pando.api.canvassing.v1.events.LeadTypeModified.toObject = function(includeInstance, msg) {
  var f, obj = {
    leadType: (f = msg.getLeadType()) && proto.pando.api.canvassing.v1.events.EventLeadType.toObject(includeInstance, f),
    userData: (f = msg.getUserData()) && pando_api_shared_pb.UserMetadata.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.pando.api.canvassing.v1.events.LeadTypeModified}
 */
proto.pando.api.canvassing.v1.events.LeadTypeModified.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.pando.api.canvassing.v1.events.LeadTypeModified;
  return proto.pando.api.canvassing.v1.events.LeadTypeModified.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.pando.api.canvassing.v1.events.LeadTypeModified} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.pando.api.canvassing.v1.events.LeadTypeModified}
 */
proto.pando.api.canvassing.v1.events.LeadTypeModified.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.pando.api.canvassing.v1.events.EventLeadType;
      reader.readMessage(value,proto.pando.api.canvassing.v1.events.EventLeadType.deserializeBinaryFromReader);
      msg.setLeadType(value);
      break;
    case 1000:
      var value = new pando_api_shared_pb.UserMetadata;
      reader.readMessage(value,pando_api_shared_pb.UserMetadata.deserializeBinaryFromReader);
      msg.setUserData(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.pando.api.canvassing.v1.events.LeadTypeModified.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.pando.api.canvassing.v1.events.LeadTypeModified.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.pando.api.canvassing.v1.events.LeadTypeModified} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.pando.api.canvassing.v1.events.LeadTypeModified.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getLeadType();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.pando.api.canvassing.v1.events.EventLeadType.serializeBinaryToWriter
    );
  }
  f = message.getUserData();
  if (f != null) {
    writer.writeMessage(
      1000,
      f,
      pando_api_shared_pb.UserMetadata.serializeBinaryToWriter
    );
  }
};


/**
 * optional EventLeadType lead_type = 1;
 * @return {?proto.pando.api.canvassing.v1.events.EventLeadType}
 */
proto.pando.api.canvassing.v1.events.LeadTypeModified.prototype.getLeadType = function() {
  return /** @type{?proto.pando.api.canvassing.v1.events.EventLeadType} */ (
    jspb.Message.getWrapperField(this, proto.pando.api.canvassing.v1.events.EventLeadType, 1));
};


/**
 * @param {?proto.pando.api.canvassing.v1.events.EventLeadType|undefined} value
 * @return {!proto.pando.api.canvassing.v1.events.LeadTypeModified} returns this
*/
proto.pando.api.canvassing.v1.events.LeadTypeModified.prototype.setLeadType = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.pando.api.canvassing.v1.events.LeadTypeModified} returns this
 */
proto.pando.api.canvassing.v1.events.LeadTypeModified.prototype.clearLeadType = function() {
  return this.setLeadType(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.pando.api.canvassing.v1.events.LeadTypeModified.prototype.hasLeadType = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional pando.api.UserMetadata user_data = 1000;
 * @return {?proto.pando.api.UserMetadata}
 */
proto.pando.api.canvassing.v1.events.LeadTypeModified.prototype.getUserData = function() {
  return /** @type{?proto.pando.api.UserMetadata} */ (
    jspb.Message.getWrapperField(this, pando_api_shared_pb.UserMetadata, 1000));
};


/**
 * @param {?proto.pando.api.UserMetadata|undefined} value
 * @return {!proto.pando.api.canvassing.v1.events.LeadTypeModified} returns this
*/
proto.pando.api.canvassing.v1.events.LeadTypeModified.prototype.setUserData = function(value) {
  return jspb.Message.setWrapperField(this, 1000, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.pando.api.canvassing.v1.events.LeadTypeModified} returns this
 */
proto.pando.api.canvassing.v1.events.LeadTypeModified.prototype.clearUserData = function() {
  return this.setUserData(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.pando.api.canvassing.v1.events.LeadTypeModified.prototype.hasUserData = function() {
  return jspb.Message.getField(this, 1000) != null;
};


/**
 * @enum {number}
 */
proto.pando.api.canvassing.v1.events.Events = {
  NO_TYPE: 0,
  CANVASSING_AREA_CREATED: 1,
  CANVASSING_AREA_UPDATED: 2,
  CANVASSING_AREA_DELETED: 3,
  CANVASSING_AREA_ASSIGNED: 4,
  CANVASSING_AREA_UNASSIGNED: 5,
  CANVASSING_AREA_NOTE_CREATED: 6,
  CANVASSING_AREA_NOTE_DELETED: 7,
  CANVASSING_LEAD_CREATED: 10,
  CANVASSING_LEAD_DELETED: 11,
  CANVASSING_LEAD_UPDATED: 12,
  CANVASSING_LEAD_NOTE_CREATED: 13,
  CANVASSING_LEAD_NOTE_DELETED: 14,
  CANVASSING_LEAD_TYPE_CREATED: 20,
  CANVASSING_LEAD_TYPE_UPDATED: 21,
  CANVASSING_LEAD_TYPE_DELETED: 22
};

goog.object.extend(exports, proto.pando.api.canvassing.v1.events);
